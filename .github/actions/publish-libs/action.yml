name: "Publish ACA libs to NPM and GH registry"
description: "Publish ACA libs to NPM and GH registry"

inputs:
  branch_name:
    description: 'Name of the branch the workflow runs on'
    required: true
    type: string
  github_token:
    description: 'Github token'
    required: true
    type: string
  npm_registry_address:
    description: 'NPM registry address'
    required: true
    type: string
  npm_registry_token:
    description: 'NPM registry token'
    required: true
    type: string
  npm_tag:
    description: 'NPM tag'
    required: true
    type: string
  dry-run:
    description: dry run flag
    required: true
    type: boolean

runs:
  using: "composite"
  steps:
    - run: npm ci
      shell: bash
    - name: Update Library Versions
      shell: bash
      run: |
        VERSION_IN_PACKAGE_JSON=$(jq -cr '.version' < package.json)

        if [[ ${{ inputs.branch_name }} =~ ^master.*?$ ]] ; then
          NEW_LIBRARY_VERSION="$VERSION_IN_PACKAGE_JSON"
        else
          NEW_LIBRARY_VERSION="${VERSION_IN_PACKAGE_JSON}-${{ github.run_id }}"
        fi

        echo -e "Branch is '${{ inputs.branch_name }}, therefore publish with '${{ inputs.npm_tag }}' tag\n"

        ./scripts/gh/update-lib-versions.sh "$NEW_LIBRARY_VERSION" "${{ inputs.dry-run }}"

        echo "Building projects"
        npm run build-libs

    - uses: actions/setup-node@v3
      name: setup GH registry
      with:
        node-version-file: '.nvmrc'
        registry-url: 'https://npm.pkg.github.com'
        scope: '@alfresco'
    - name: Publish to GH registry
      shell: bash
      run: ./scripts/gh/npm-publish.sh "${{ inputs.npm_tag }}" "${{ inputs.dry-run }}"
      env:
          NODE_AUTH_TOKEN: ${{ inputs.github_token }}

    - uses: actions/setup-node@v3
      name: setup NPM registry
      with:
        node-version-file: '.nvmrc'
        registry-url: ${{ inputs.npm_registry_address }}
        scope: '@alfresco'
    - name: Publish to NPM registry
      shell: bash
      run: ./scripts/gh/npm-publish.sh "${{ inputs.npm_tag }}" "${{ inputs.dry-run }}"
      env:
          NODE_AUTH_TOKEN: ${{ inputs.npm_registry_token }}
