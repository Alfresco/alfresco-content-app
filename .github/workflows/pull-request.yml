name: "Pull request"

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [master, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BASE_URL: ${{ secrets.PIPELINE_ENV_URL }}
  ADMIN_EMAIL: ${{ secrets.PIPELINE_ADMIN_USERNAME }}
  ADMIN_PASSWORD: ${{ secrets.PIPELINE_ADMIN_PASSWORD }}
  HR_USER: ${{ secrets.HR_USER }}
  HR_USER_PASSWORD: ${{ secrets.HR_USER_PASSWORD }}
  SCREENSHOT_USERNAME: ${{ secrets.SCREENSHOT_USERNAME }}
  SCREENSHOT_PASSWORD: ${{ secrets.SCREENSHOT_PASSWORD}}
  PLAYWRIGHT_E2E_HOST: ${{ secrets.PLAYWRIGHT_E2E_HOST }}
  GH_BUILD_NUMBER: ${{ github.run_id }}
  MAXINSTANCES: 2
  RETRY_COUNT: 2

jobs:
  lint:
    name: 'lint'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - run: npm ci
      - run: npm run affected:lint -- --base=origin/develop
      - run: npm run stylelint

  build:
    name: 'build'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - uses: ./.github/actions/before-install
      - run: npm ci
      - run: npm run build -- $BUILD_OPTS

      - name: dist cache
        if: ${{ success() }}
        uses: actions/cache/save@v3
        with:
          path: ./dist/content-ce
          key: cache-dist-${{ github.run_id }}

  unit-tests:
    needs: [lint, build]
    name: "Unit tests: ${{ matrix.unit-tests.name }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unit-tests:
          - name: "aca-content"
          - name: "aca-shared"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - uses: ./.github/actions/before-install
      - run: npm ci
      - run: npm run affected:test -- --browsers=ChromeHeadless --watch=false $TEST_OPTS --base=origin/develop

  e2es:
    needs: [lint, build, unit-tests]
    name: 'E2e test suites: ${{ matrix.e2e-suites.name }}'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        e2e-suites:
          - name: "listViews"
            id: 1
          - name: "search"
            id: 2
          - name: "viewer,infoDrawer"
            id: 3
          - name: "copyMoveActions"
            id: 6
          - name: "deleteActions"
            id: 7
          - name: "editActions,favoriteActions"
            id: 8
          - name: "uploadDownloadActions"
            id: 9
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - uses: ./.github/actions/before-install
      - run: npm ci

      - uses: actions/cache/restore@v3
        id: cache
        with:
          path: ./dist/content-ce
          key: cache-dist-${{ github.run_id }}

      - uses: ./.github/actions/before-e2e

      - uses: ./.github/actions/run-e2e
        with:
          options: "--suite=${{ matrix.e2e-suites.name }}"
          artifact-name: ${{ matrix.e2e-suites.name }}
      - uses: ./.github/actions/after-e2e

  e2es-playwright:
    needs: [lint, build, unit-tests]
    name: 'E2e test suites: Playwright'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        e2e-suites:
          - name: "create-actions"
            id: 1
          - name: "folder-rules"
            id: 2
          - name: "viewer"
            id: 3
          - name: "authentication"
            id: 4
          - name: "navigation"
            id: 5
          - name: "special-permissions"
            id: 6
          - name: "pagination"
            id: 7
          - name: "list-views"
            id: 8
          - name: "share-action"
            id: 9
          - name: "copy-move-actions"
            id: 10
          - name: "library-actions"
            id: 11
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - uses: ./.github/actions/before-install
      - run: npm ci

      - uses: actions/cache/restore@v3
        id: cache
        with:
          path: ./dist/content-ce
          key: cache-dist-${{ github.run_id }}

      - uses: ./.github/actions/before-e2e

      - name: before playwright
        shell: bash
        run: npx playwright install chromium
      - uses: ./.github/actions/run-e2e-playwright
        with:
          options: "${{ matrix.e2e-suites.name }}"
          artifact-name: ${{ matrix.e2e-suites.name }}
          test-runner: playwright
      - uses: ./.github/actions/after-e2e

  finalize:
    if: ${{ always() }}
    needs: [lint, build, unit-tests, e2es, e2es-playwright]
    name: 'Finalize'
    runs-on: ubuntu-latest
    steps:
      - name: Check previous jobs status
        if: >-
            ${{
                contains(needs.*.result, 'failure')
              || contains(needs.*.result, 'cancelled')
            }}
        run: exit 1

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Extract commit message
        uses: Alfresco/alfresco-build-tools/.github/actions/get-commit-message@v1.35.0

      - name: Check ADF link
        shell: bash
        run: |
          if [[ $COMMIT_MESSAGE == *"[link-adf:"* ]]; then
            BRANCH=`echo $COMMIT_MESSAGE | grep -o "\[link-adf\:[^]]*\]" | sed -e 's#\[link-adf:##g' | sed -e 's#\]##g'`
            echo -e "\e[31mPRs are not mergeable with conditional build. This build was run with custom ADF branch: $BRANCH \e[0m"
            exit 1
          fi;


