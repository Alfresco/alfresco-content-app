!(function(e, n) {
  'object' == typeof exports && 'undefined' != typeof module
    ? n(exports)
    : 'function' == typeof define && define.amd
    ? define('@alfresco/aca-shared/rules', ['exports'], n)
    : n(
        ((e.alfresco = e.alfresco || {}),
        (e.alfresco['aca-shared'] = e.alfresco['aca-shared'] || {}),
        (e.alfresco['aca-shared'].rules = {}))
      );
})(this, function(e) {
  'use strict';
  /*!
   * @license
   * Alfresco Example Content Application
   *
   * Copyright (C) 2005 - 2020 Alfresco Software Limited
   *
   * This file is part of the Alfresco Example Content Application.
   * If the software was purchased under a paid Alfresco license, the terms of
   * the paid license agreement will prevail.  Otherwise, the software is
   * provided under the following open source license terms:
   *
   * The Alfresco Example Content Application is free software: you can redistribute it and/or modify
   * it under the terms of the GNU Lesser General Public License as published by
   * the Free Software Foundation, either version 3 of the License, or
   * (at your option) any later version.
   *
   * The Alfresco Example Content Application is distributed in the hope that it will be useful,
   * but WITHOUT ANY WARRANTY; without even the implied warranty of
   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   * GNU Lesser General Public License for more details.
   *
   * You should have received a copy of the GNU Lesser General Public License
   * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.
   */ function r(e) {
    var n = e.navigation.url;
    return (
      n &&
      (n.includes('/preview/') ||
        n.includes('viewer:view') ||
        n.includes('/view/'))
    );
  }
  function i(e) {
    var n = e.navigation.url;
    return n && n.startsWith('/favorites') && !r(e);
  }
  function n(e) {
    var n = e.navigation.url;
    return n && n.startsWith('/shared') && !r(e);
  }
  function t(e) {
    var n = e.navigation.url;
    return n && n.startsWith('/trashcan');
  }
  function o(e) {
    return !t(e);
  }
  function s(e) {
    var n = e.navigation.url;
    return n && (n.endsWith('/libraries') || n.startsWith('/search-libraries'));
  }
  function a(e) {
    return !s(e);
  }
  function c(e) {
    var n = e.navigation.url;
    return n && n.startsWith('/recent-files');
  }
  function l(e) {
    var n = e.navigation.url;
    return n && n.startsWith('/search');
  }
  function u(e) {
    return !l(e);
  }
  /*!
   * @license
   * Alfresco Example Content Application
   *
   * Copyright (C) 2005 - 2020 Alfresco Software Limited
   *
   * This file is part of the Alfresco Example Content Application.
   * If the software was purchased under a paid Alfresco license, the terms of
   * the paid license agreement will prevail.  Otherwise, the software is
   * provided under the following open source license terms:
   *
   * The Alfresco Example Content Application is free software: you can redistribute it and/or modify
   * it under the terms of the GNU Lesser General Public License as published by
   * the Free Software Foundation, either version 3 of the License, or
   * (at your option) any later version.
   *
   * The Alfresco Example Content Application is distributed in the hope that it will be useful,
   * but WITHOUT ANY WARRANTY; without even the implied warranty of
   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   * GNU Lesser General Public License for more details.
   *
   * You should have received a copy of the GNU Lesser General Public License
   * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.
   */
  function f(e) {
    return e.repository.status.isQuickShareEnabled;
  }
  function d(e) {
    return (
      !e.selection.isEmpty &&
      (!(i(e) || s(e) || t(e)) &&
        e.selection.nodes.some(function(e) {
          return !e.entry.isFavorite;
        }))
    );
  }
  function v(e) {
    return (
      !e.selection.isEmpty &&
      !t(e) &&
      (!!i(e) ||
        e.selection.nodes.every(function(e) {
          return e.entry.isFavorite;
        }))
    );
  }
  function y(e) {
    return [e.selection.file, o(e), f(e), !h(e)].every(Boolean);
  }
  function h(e) {
    return (
      !(!n(e) || !e.selection.file) ||
      (o(e),
      !(e.selection.isEmpty || !e.selection.file) &&
        !!(
          e.selection.file.entry &&
          e.selection.file.entry.properties &&
          e.selection.file.entry.properties['qshare:sharedId']
        ))
    );
  }
  function p(e) {
    return !e.selection.isEmpty;
  }
  function m(e) {
    return !!e.selection.library;
  }
  function g(e) {
    var n = e.selection.library;
    return (
      !!n &&
      !(!n.entry || !n.entry.visibility || 'PRIVATE' !== n.entry.visibility)
    );
  }
  function F(e) {
    var n = e.selection.library;
    return !!n && !(!n.entry || !n.entry.role);
  }
  function w(e) {
    return !F(e);
  }
  function S(e) {
    return !!(e && e.selection && e.selection.file);
  }
  function k(e) {
    if (!e.selection || e.selection.isEmpty) return !1;
    var n = e.selection.first;
    return (!n.entry.isFile || !L(e)) && e.permissions.check(n, ['update']);
  }
  function b(e) {
    var n = e.selection.folder;
    return !!n && (i(e) || e.permissions.check(n.entry, ['update']));
  }
  function L(e) {
    return (
      !!(e && e.selection && e.selection.nodes) &&
      e.selection.nodes.some(function(e) {
        return (
          !!e.entry.isFile &&
          (e.entry.isLocked ||
            (e.entry.properties &&
              'READ_ONLY_LOCK' === e.entry.properties['cm:lockType']))
        );
      })
    );
  }
  function B(e) {
    return !(
      !(
        e &&
        e.selection &&
        e.selection.file &&
        e.selection.file.entry &&
        e.selection.file.entry.properties
      ) ||
      ('WRITE_LOCK' !== e.selection.file.entry.properties['cm:lockType'] &&
        'READ_ONLY_LOCK' !== e.selection.file.entry.properties['cm:lockType'])
    );
  }
  function W(e) {
    return (
      B(e) &&
      e.selection.file.entry.properties['cm:lockOwner'] &&
      e.selection.file.entry.properties['cm:lockOwner'].id === e.profile.id
    );
  }
  function E(e) {
    return !B(e) && k(e);
  }
  function O(e) {
    var n = e.selection.file;
    return B(e) && (e.permissions.check(n.entry, ['delete']) || W(e));
  }
  (e.canCopyNode = function T(e) {
    return [p(e), o(e), a(e)].every(Boolean);
  }),
    (e.canAddFavorite = d),
    (e.canRemoveFavorite = v),
    (e.canShareFile = y),
    (e.canToggleJoinLibrary = function N(e) {
      return [m(e), !g(e), w(e)].every(Boolean);
    }),
    (e.canEditFolder = function P(e) {
      return [b(e), o(e)].every(Boolean);
    }),
    (e.isShared = h),
    (e.canDeleteSelection = function R(e) {
      return (
        !(!(o(e) && a(e) && u(e)) || e.selection.isEmpty) &&
        !L(e) &&
        (!!i(e) ||
          (r(e)
            ? e.permissions.check(e.selection.nodes, ['delete'])
            : n(e)
            ? e.permissions.check(e.selection.nodes, ['delete'], {
                target: 'allowableOperationsOnTarget'
              })
            : e.permissions.check(e.selection.nodes, ['delete'])))
      );
    }),
    (e.canUnshareNodes = function U(e) {
      return (
        !e.selection.isEmpty &&
        e.permissions.check(e.selection.nodes, ['delete'], {
          target: 'allowableOperationsOnTarget'
        })
      );
    }),
    (e.hasSelection = p),
    (e.canCreateFolder = function _(e) {
      var n = e.navigation.currentFolder;
      return !!n && e.permissions.check(n, ['create']);
    }),
    (e.canUpload = function A(e) {
      var n = e.navigation.currentFolder;
      return !!n && e.permissions.check(n, ['create']);
    }),
    (e.canDownloadSelection = function C(e) {
      return (
        !(e.selection.isEmpty || !o(e)) &&
        e.selection.nodes.every(function(e) {
          return (
            e.entry && (e.entry.isFile || e.entry.isFolder || !!e.entry.nodeId)
          );
        })
      );
    }),
    (e.hasFolderSelected = function I(e) {
      return !!e.selection.folder;
    }),
    (e.hasLibrarySelected = m),
    (e.isPrivateLibrary = g),
    (e.hasLibraryRole = F),
    (e.hasNoLibraryRole = w),
    (e.hasFileSelected = S),
    (e.canUpdateSelectedNode = k),
    (e.canUpdateSelectedFolder = b),
    (e.hasLockedFiles = L),
    (e.isWriteLocked = B),
    (e.isUserWriteLockOwner = W),
    (e.canLockFile = E),
    (e.canUnlockFile = O),
    (e.canUploadVersion = function D(e) {
      return i(e) || n(e)
        ? S(e)
        : [S(e), o(e), B(e) ? W(e) : k(e)].every(Boolean);
    }),
    (e.isTrashcanItemSelected = function V(e) {
      return [t(e), p(e)].every(Boolean);
    }),
    (e.canViewFile = function x(e) {
      return [S(e), o(e)].every(Boolean);
    }),
    (e.canLeaveLibrary = function K(e) {
      return [m(e), F(e)].every(Boolean);
    }),
    (e.canToggleSharedLink = function M(e) {
      return [S(e), [y(e), h(e)].some(Boolean)].every(Boolean);
    }),
    (e.canShowInfoDrawer = function j(e) {
      return [p(e), a(e), o(e)].every(Boolean);
    }),
    (e.canManageFileVersions = function Q(e) {
      return [S(e), o(e), !L(e)].every(Boolean);
    }),
    (e.canManagePermissions = function Y(e) {
      return [k(e), o(e)].every(Boolean);
    }),
    (e.canToggleEditOffline = function q(e) {
      return [S(e), o(e), E(e) || O(e)].every(Boolean);
    }),
    (e.canToggleFavorite = function J(e) {
      return [
        [d(e), v(e)].some(Boolean),
        [c(e), n(e), l(e), i(e)].some(Boolean)
      ].every(Boolean);
    }),
    (e.canShowLanguagePicker = function z(e) {
      return e.languagePicker;
    }),
    (e.canShowLogout = function G(e) {
      return !e.withCredentials;
    }),
    (e.canShowProcessServices = function H(e) {
      return e.processServices;
    }),
    /*!
     * @license
     * Alfresco Example Content Application
     *
     * Copyright (C) 2005 - 2020 Alfresco Software Limited
     *
     * This file is part of the Alfresco Example Content Application.
     * If the software was purchased under a paid Alfresco license, the terms of
     * the paid license agreement will prevail.  Otherwise, the software is
     * provided under the following open source license terms:
     *
     * The Alfresco Example Content Application is free software: you can redistribute it and/or modify
     * it under the terms of the GNU Lesser General Public License as published by
     * the Free Software Foundation, either version 3 of the License, or
     * (at your option) any later version.
     *
     * The Alfresco Example Content Application is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     * GNU Lesser General Public License for more details.
     *
     * You should have received a copy of the GNU Lesser General Public License
     * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.
     */ (e.isPreview = r),
    (e.isFavorites = i),
    (e.isNotFavorites = function X(e) {
      return !i(e);
    }),
    (e.isSharedFiles = n),
    (e.isNotSharedFiles = function Z(e) {
      return !n(e);
    }),
    (e.isTrashcan = t),
    (e.isNotTrashcan = o),
    (e.isPersonalFiles = function $(e) {
      var n = e.navigation.url;
      return n && n.startsWith('/personal-files');
    }),
    (e.isLibraryFiles = function ee(e) {
      var n = e.navigation.url;
      return n && n.startsWith('/libraries');
    }),
    (e.isLibraries = s),
    (e.isNotLibraries = a),
    (e.isRecentFiles = c),
    (e.isNotRecentFiles = function ne(e) {
      return !c(e);
    }),
    (e.isSearchResults = l),
    (e.isNotSearchResults = u),
    (e.isSharedPreview = function re(e) {
      var n = e.navigation.url;
      return (
        n &&
        (n.startsWith('/shared/preview/') ||
          (n.startsWith('/shared') && n.includes('viewer:view')))
      );
    }),
    (e.isFavoritesPreview = function ie(e) {
      var n = e.navigation.url;
      return (
        n &&
        (n.startsWith('/favorites/preview/') ||
          (n.startsWith('/favorites') && n.includes('viewer:view')))
      );
    }),
    (e.isSharedFileViewer = function te(e) {
      var n = e.navigation.url;
      return n && n.startsWith('/preview/s/');
    }),
    (e.hasQuickShareEnabled = f),
    (e.isAdmin = function oe(e) {
      return e.profile.isAdmin;
    }),
    Object.defineProperty(e, '__esModule', { value: !0 });
});
//# sourceMappingURL=alfresco-aca-shared-rules.umd.min.js.map
