{"version":3,"file":"alfresco-aca-shared-store.umd.js.map","sources":["ng://@alfresco/aca-shared/store/actions/app.actions.ts","ng://@alfresco/aca-shared/store/actions/library.actions.ts","ng://@alfresco/aca-shared/store/actions/node.actions.ts","ng://@alfresco/aca-shared/store/actions/router.actions.ts","ng://@alfresco/aca-shared/store/actions/search.actions.ts","ng://@alfresco/aca-shared/store/actions/snackbar.actions.ts","ng://@alfresco/aca-shared/store/actions/upload.actions.ts","ng://@alfresco/aca-shared/store/actions/viewer.actions.ts","ng://@alfresco/aca-shared/store/actions/metadata-aspect.actions.ts","ng://@alfresco/aca-shared/store/actions/template.actions.ts","ng://@alfresco/aca-shared/store/actions/contextmenu.actions.ts","node_modules/tslib/tslib.es6.js","ng://@alfresco/aca-shared/store/effects/dialog.effects.ts","ng://@alfresco/aca-shared/store/effects/router.effects.ts","ng://@alfresco/aca-shared/store/effects/snackbar.effects.ts","ng://@alfresco/aca-shared/store/models/search-option.model.ts","ng://@alfresco/aca-shared/store/selectors/app.selectors.ts","ng://@alfresco/aca-shared/store/store.module.ts"],"sourcesContent":["/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { Node, Person, Group, RepositoryInfo } from '@alfresco/js-api';\nimport { AppState } from '../states/app.state';\n\nexport enum AppActionTypes {\n  SetInitialState = 'SET_INITIAL_STATE',\n  SetLanguagePicker = 'SET_LANGUAGE_PICKER',\n  SetCurrentFolder = 'SET_CURRENT_FOLDER',\n  SetCurrentUrl = 'SET_CURRENT_URL',\n  SetUserProfile = 'SET_USER_PROFILE',\n  SetRepositoryInfo = 'SET_REPOSITORY_INFO',\n  ToggleInfoDrawer = 'TOGGLE_INFO_DRAWER',\n  ToggleDocumentDisplayMode = 'TOGGLE_DOCUMENT_DISPLAY_MODE',\n  Logout = 'LOGOUT',\n  ReloadDocumentList = 'RELOAD_DOCUMENT_LIST',\n  ResetSelection = 'RESET_SELECTION',\n  SetInfoDrawerState = 'SET_INFO_DRAWER_STATE',\n  SetInfoDrawerMetadataAspect = 'SET_INFO_DRAWER_METADATA_ASPECT',\n  CloseModalDialogs = 'CLOSE_MODAL_DIALOGS',\n  ToggleProcessServices = 'TOGGLE_PROCESS_SERVICES'\n}\n\nexport class SetInitialStateAction implements Action {\n  readonly type = AppActionTypes.SetInitialState;\n\n  constructor(public payload: AppState) {}\n}\n\nexport class SetLanguagePickerAction implements Action {\n  readonly type = AppActionTypes.SetLanguagePicker;\n\n  constructor(public payload: boolean) {}\n}\n\nexport class SetCurrentFolderAction implements Action {\n  readonly type = AppActionTypes.SetCurrentFolder;\n\n  constructor(public payload: Node) {}\n}\n\nexport class SetCurrentUrlAction implements Action {\n  readonly type = AppActionTypes.SetCurrentUrl;\n\n  constructor(public payload: string) {}\n}\n\nexport class SetUserProfileAction implements Action {\n  readonly type = AppActionTypes.SetUserProfile;\n\n  constructor(public payload: { person: Person; groups: Group[] }) {}\n}\n\nexport class ToggleInfoDrawerAction implements Action {\n  readonly type = AppActionTypes.ToggleInfoDrawer;\n}\n\nexport class ToggleDocumentDisplayMode implements Action {\n  readonly type = AppActionTypes.ToggleDocumentDisplayMode;\n}\n\nexport class LogoutAction implements Action {\n  readonly type = AppActionTypes.Logout;\n}\n\nexport class ReloadDocumentListAction implements Action {\n  readonly type = AppActionTypes.ReloadDocumentList;\n\n  constructor(public payload?: any) {}\n}\n\nexport class ResetSelectionAction implements Action {\n  readonly type = AppActionTypes.ResetSelection;\n\n  constructor(public payload?: any) {}\n}\n\nexport class SetInfoDrawerStateAction implements Action {\n  readonly type = AppActionTypes.SetInfoDrawerState;\n\n  constructor(public payload: boolean) {}\n}\n\nexport class CloseModalDialogsAction implements Action {\n  readonly type = AppActionTypes.CloseModalDialogs;\n}\n\nexport class SetRepositoryInfoAction implements Action {\n  readonly type = AppActionTypes.SetRepositoryInfo;\n\n  constructor(public payload: RepositoryInfo) {}\n}\n\nexport class ToggleProcessServicesAction implements Action {\n  readonly type = AppActionTypes.ToggleProcessServices;\n\n  constructor(public payload: boolean) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { SiteBody } from '@alfresco/js-api';\n\nexport enum LibraryActionTypes {\n  Delete = 'DELETE_LIBRARY',\n  Create = 'CREATE_LIBRARY',\n  Navigate = 'NAVIGATE_LIBRARY',\n  Update = 'UPDATE_LIBRARY',\n  Leave = 'LEAVE_LIBRARY'\n}\n\nexport class DeleteLibraryAction implements Action {\n  readonly type = LibraryActionTypes.Delete;\n\n  constructor(public payload?: string) {}\n}\n\nexport class CreateLibraryAction implements Action {\n  readonly type = LibraryActionTypes.Create;\n}\n\nexport class NavigateLibraryAction implements Action {\n  readonly type = LibraryActionTypes.Navigate;\n\n  constructor(public payload?: string) {}\n}\n\nexport class UpdateLibraryAction implements Action {\n  readonly type = LibraryActionTypes.Update;\n\n  constructor(public payload?: SiteBody) {}\n}\n\nexport class LeaveLibraryAction implements Action {\n  readonly type = LibraryActionTypes.Leave;\n\n  constructor(public payload?: string) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { MinimalNodeEntity } from '@alfresco/js-api';\n\nexport enum NodeActionTypes {\n  SetSelection = 'SET_SELECTED_NODES',\n  Delete = 'DELETE_NODES',\n  UndoDelete = 'UNDO_DELETE_NODES',\n  RestoreDeleted = 'RESTORE_DELETED_NODES',\n  PurgeDeleted = 'PURGE_DELETED_NODES',\n  Download = 'DOWNLOAD_NODES',\n  CreateFolder = 'CREATE_FOLDER',\n  EditFolder = 'EDIT_FOLDER',\n  Share = 'SHARE_NODE',\n  Unshare = 'UNSHARE_NODES',\n  Copy = 'COPY_NODES',\n  Move = 'MOVE_NODES',\n  ManagePermissions = 'MANAGE_PERMISSIONS',\n  PrintFile = 'PRINT_FILE',\n  ManageVersions = 'MANAGE_VERSIONS',\n  EditOffline = 'EDIT_OFFLINE',\n  UnlockForWriting = 'UNLOCK_WRITE_LOCK',\n  AddFavorite = 'ADD_FAVORITE',\n  RemoveFavorite = 'REMOVE_FAVORITE'\n}\n\nexport class SetSelectedNodesAction implements Action {\n  readonly type = NodeActionTypes.SetSelection;\n\n  constructor(public payload: MinimalNodeEntity[] = []) {}\n}\n\nexport class DeleteNodesAction implements Action {\n  readonly type = NodeActionTypes.Delete;\n\n  constructor(public payload: MinimalNodeEntity[] = []) {}\n}\n\nexport class UndoDeleteNodesAction implements Action {\n  readonly type = NodeActionTypes.UndoDelete;\n\n  constructor(public payload: any[] = []) {}\n}\n\nexport class RestoreDeletedNodesAction implements Action {\n  readonly type = NodeActionTypes.RestoreDeleted;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class PurgeDeletedNodesAction implements Action {\n  readonly type = NodeActionTypes.PurgeDeleted;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class DownloadNodesAction implements Action {\n  readonly type = NodeActionTypes.Download;\n\n  constructor(public payload: MinimalNodeEntity[] = []) {}\n}\n\nexport class CreateFolderAction implements Action {\n  readonly type = NodeActionTypes.CreateFolder;\n\n  constructor(public payload: string) {}\n}\n\nexport class EditFolderAction implements Action {\n  readonly type = NodeActionTypes.EditFolder;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class ShareNodeAction implements Action {\n  readonly type = NodeActionTypes.Share;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class UnshareNodesAction implements Action {\n  readonly type = NodeActionTypes.Unshare;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class CopyNodesAction implements Action {\n  readonly type = NodeActionTypes.Copy;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class MoveNodesAction implements Action {\n  readonly type = NodeActionTypes.Move;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class ManagePermissionsAction implements Action {\n  readonly type = NodeActionTypes.ManagePermissions;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class PrintFileAction implements Action {\n  readonly type = NodeActionTypes.PrintFile;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class ManageVersionsAction implements Action {\n  readonly type = NodeActionTypes.ManageVersions;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class EditOfflineAction implements Action {\n  readonly type = NodeActionTypes.EditOffline;\n\n  constructor(public payload: any) {}\n}\n\nexport class UnlockWriteAction implements Action {\n  readonly type = NodeActionTypes.UnlockForWriting;\n\n  constructor(public payload: any) {}\n}\n\nexport class AddFavoriteAction implements Action {\n  readonly type = NodeActionTypes.AddFavorite;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class RemoveFavoriteAction implements Action {\n  readonly type = NodeActionTypes.RemoveFavorite;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { MinimalNodeEntity } from '@alfresco/js-api';\n\nexport enum RouterActionTypes {\n  NavigateUrl = 'NAVIGATE_URL',\n  NavigateRoute = 'NAVIGATE_ROUTE',\n  NavigateFolder = 'NAVIGATE_FOLDER',\n  NavigateParentFolder = 'NAVIGATE_PARENT_FOLDER'\n}\n\nexport class NavigateUrlAction implements Action {\n  readonly type = RouterActionTypes.NavigateUrl;\n\n  constructor(public payload: string) {}\n}\n\nexport class NavigateRouteAction implements Action {\n  readonly type = RouterActionTypes.NavigateRoute;\n\n  constructor(public payload: any[]) {}\n}\n\nexport class NavigateToFolder implements Action {\n  readonly type = RouterActionTypes.NavigateFolder;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class NavigateToParentFolder implements Action {\n  readonly type = RouterActionTypes.NavigateParentFolder;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { SearchOptionModel } from '../models/search-option.model';\n\nexport enum SearchActionTypes {\n  SearchByTerm = 'SEARCH_BY_TERM',\n  ToggleFilter = 'TOGGLE_SEARCH_FILTER',\n  ShowFilter = 'SHOW_SEARCH_FILTER',\n  HideFilter = 'HIDE_SEARCH_FILTER'\n}\n\nexport class SearchByTermAction implements Action {\n  readonly type = SearchActionTypes.SearchByTerm;\n  constructor(\n    public payload: string,\n    public searchOptions?: SearchOptionModel[]\n  ) {}\n}\n\nexport class ToggleSearchFilterAction implements Action {\n  readonly type = SearchActionTypes.ToggleFilter;\n}\n\nexport class ShowSearchFilterAction implements Action {\n  readonly type = SearchActionTypes.ShowFilter;\n}\n\nexport class HideSearchFilterAction implements Action {\n  readonly type = SearchActionTypes.HideFilter;\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\n\nexport enum SnackbarActionTypes {\n  Info = 'SNACKBAR_INFO',\n  Warning = 'SNACKBAR_WARNING',\n  Error = 'SNACKBAR_ERROR'\n}\n\nexport interface SnackbarAction extends Action {\n  payload: string;\n  params?: Object;\n  userAction?: SnackbarUserAction;\n  duration: number;\n}\n\nexport class SnackbarUserAction {\n  constructor(public title: string, public action: Action) {}\n}\n\nexport class SnackbarInfoAction implements SnackbarAction {\n  readonly type = SnackbarActionTypes.Info;\n\n  userAction?: SnackbarUserAction;\n  duration = 4000;\n\n  constructor(public payload: string, public params?: Object) {}\n}\n\nexport class SnackbarWarningAction implements SnackbarAction {\n  readonly type = SnackbarActionTypes.Warning;\n\n  userAction?: SnackbarUserAction;\n  duration = 4000;\n\n  constructor(public payload: string, public params?: Object) {}\n}\n\nexport class SnackbarErrorAction implements SnackbarAction {\n  readonly type = SnackbarActionTypes.Error;\n\n  userAction?: SnackbarUserAction;\n  duration = 4000;\n\n  constructor(public payload: string, public params?: Object) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\n\nexport enum UploadActionTypes {\n  UploadFiles = 'UPLOAD_FILES',\n  UploadFolder = 'UPLOAD_FOLDER',\n  UploadFileVersion = 'UPLOAD_FILE_VERSION'\n}\n\nexport class UploadFilesAction implements Action {\n  readonly type = UploadActionTypes.UploadFiles;\n\n  constructor(public payload: any) {}\n}\n\nexport class UploadFolderAction implements Action {\n  readonly type = UploadActionTypes.UploadFolder;\n\n  constructor(public payload: any) {}\n}\n\nexport class UploadFileVersionAction implements Action {\n  readonly type = UploadActionTypes.UploadFileVersion;\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { MinimalNodeEntity } from '@alfresco/js-api';\n\nexport enum ViewerActionTypes {\n  ViewFile = 'VIEW_FILE',\n  ViewNode = 'VIEW_NODE',\n  FullScreen = 'FULLSCREEN_VIEWER',\n  ClosePreview = 'CLOSE_PREVIEW'\n}\n\nexport interface ViewNodeExtras {\n  location?: string;\n  path?: string;\n}\n\nexport class ViewFileAction implements Action {\n  readonly type = ViewerActionTypes.ViewFile;\n\n  constructor(public payload?: MinimalNodeEntity, public parentId?: string) {}\n}\n\nexport class ViewNodeAction implements Action {\n  readonly type = ViewerActionTypes.ViewNode;\n\n  constructor(public nodeId: string, public viewNodeExtras?: ViewNodeExtras) {}\n}\n\nexport class FullscreenViewerAction implements Action {\n  readonly type = ViewerActionTypes.FullScreen;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class ClosePreviewAction implements Action {\n  readonly type = ViewerActionTypes.ClosePreview;\n  constructor(public payload?: MinimalNodeEntity) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\n\nexport const SET_INFO_DRAWER_METADATA_ASPECT =\n  'SET_INFO_DRAWER_METADATA_ASPECT';\n\nexport class SetInfoDrawerMetadataAspectAction implements Action {\n  readonly type = SET_INFO_DRAWER_METADATA_ASPECT;\n  constructor(public payload: string) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { Node } from '@alfresco/js-api';\n\nexport enum TemplateActionTypes {\n  FileFromTemplate = 'FILE_FROM_TEMPLATE',\n  FolderFromTemplate = 'FOLDER_FROM_TEMPLATE',\n  CreateFromTemplate = 'CREATE_FROM_TEMPLATE',\n  CreateFromTemplateSuccess = 'CREATE_FROM_TEMPLATE_SUCCESS'\n}\n\nexport class FileFromTemplate implements Action {\n  readonly type = TemplateActionTypes.FileFromTemplate;\n\n  constructor() {}\n}\n\nexport class FolderFromTemplate implements Action {\n  readonly type = TemplateActionTypes.FolderFromTemplate;\n\n  constructor() {}\n}\n\nexport class CreateFromTemplate implements Action {\n  readonly type = TemplateActionTypes.CreateFromTemplate;\n\n  constructor(public payload: Node) {}\n}\n\nexport class CreateFromTemplateSuccess implements Action {\n  readonly type = TemplateActionTypes.CreateFromTemplateSuccess;\n\n  constructor(public node: Node) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\n\nexport enum ContextMenuActionTypes {\n  ContextMenu = 'CONTEXT_MENU'\n}\n\nexport class ContextMenu implements Action {\n  readonly type = ContextMenuActionTypes.ContextMenu;\n\n  constructor(public event: MouseEvent) {}\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  CloseModalDialogsAction,\n  AppActionTypes\n} from '../actions/app.actions';\n\n@Injectable()\nexport class DialogEffects {\n  constructor(private actions$: Actions, private matDialog: MatDialog) {}\n\n  @Effect({ dispatch: false })\n  closeAll$ = this.actions$.pipe(\n    ofType<CloseModalDialogsAction>(AppActionTypes.CloseModalDialogs),\n    map(() => this.matDialog.closeAll())\n  );\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { MinimalNodeEntryEntity, PathInfoEntity } from '@alfresco/js-api';\nimport { map } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { AppStore } from '../states/app.state';\nimport {\n  NavigateUrlAction,\n  RouterActionTypes,\n  NavigateRouteAction,\n  NavigateToFolder,\n  NavigateToParentFolder\n} from '../actions/router.actions';\nimport { SnackbarErrorAction } from '../actions/snackbar.actions';\n\n@Injectable()\nexport class RouterEffects {\n  constructor(\n    private store: Store<AppStore>,\n    private actions$: Actions,\n    private router: Router\n  ) {}\n\n  @Effect({ dispatch: false })\n  navigateUrl$ = this.actions$.pipe(\n    ofType<NavigateUrlAction>(RouterActionTypes.NavigateUrl),\n    map(action => {\n      if (action.payload) {\n        this.router.navigateByUrl(action.payload);\n      }\n    })\n  );\n\n  @Effect({ dispatch: false })\n  navigateRoute$ = this.actions$.pipe(\n    ofType<NavigateRouteAction>(RouterActionTypes.NavigateRoute),\n    map(action => {\n      this.router.navigate(action.payload);\n    })\n  );\n\n  @Effect({ dispatch: false })\n  navigateToFolder$ = this.actions$.pipe(\n    ofType<NavigateToFolder>(RouterActionTypes.NavigateFolder),\n    map(action => {\n      if (action.payload && action.payload.entry) {\n        this.navigateToFolder(action.payload.entry);\n      }\n    })\n  );\n\n  @Effect({ dispatch: false })\n  navigateToParentFolder$ = this.actions$.pipe(\n    ofType<NavigateToParentFolder>(RouterActionTypes.NavigateParentFolder),\n    map(action => {\n      if (action.payload && action.payload.entry) {\n        this.navigateToParentFolder(action.payload.entry);\n      }\n    })\n  );\n\n  private navigateToFolder(node: MinimalNodeEntryEntity) {\n    let link: any[] = null;\n    const { path, id } = node;\n\n    if (path && path.name && path.elements) {\n      const isLibraryPath = this.isLibraryContent(<PathInfoEntity>path);\n\n      const parent = path.elements[path.elements.length - 1];\n      const area = isLibraryPath ? '/libraries' : '/personal-files';\n\n      if (!isLibraryPath) {\n        link = [area, id];\n      } else {\n        // parent.id could be 'Site' folder or child as 'documentLibrary'\n        link = [area, parent.name === 'Sites' ? {} : id];\n      }\n\n      setTimeout(() => {\n        this.router.navigate(link);\n      }, 10);\n    } else {\n      this.router.navigate(['/personal-files', node.id]);\n    }\n  }\n\n  private navigateToParentFolder(node: MinimalNodeEntryEntity) {\n    let link: any[] = null;\n    const { path } = node;\n\n    if (path && path.name && path.elements) {\n      const isLibraryPath = this.isLibraryContent(<PathInfoEntity>path);\n\n      const parent = path.elements[path.elements.length - 1];\n      const area = isLibraryPath ? '/libraries' : '/personal-files';\n\n      if (!isLibraryPath) {\n        link = [area, parent.id];\n      } else {\n        // parent.id could be 'Site' folder or child as 'documentLibrary'\n        link = [area, parent.name === 'Sites' ? {} : parent.id];\n      }\n\n      setTimeout(() => {\n        this.router.navigate(link);\n      }, 10);\n    } else {\n      this.store.dispatch(\n        new SnackbarErrorAction('APP.MESSAGES.ERRORS.CANNOT_NAVIGATE_LOCATION')\n      );\n    }\n  }\n\n  private isLibraryContent(path: PathInfoEntity): boolean {\n    if (\n      path &&\n      path.elements.length >= 2 &&\n      path.elements[1].name === 'Sites'\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { TranslationService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { map } from 'rxjs/operators';\nimport { AppStore } from '../states/app.state';\nimport {\n  SnackbarInfoAction,\n  SnackbarActionTypes,\n  SnackbarWarningAction,\n  SnackbarErrorAction,\n  SnackbarAction\n} from '../actions/snackbar.actions';\n\n@Injectable()\nexport class SnackbarEffects {\n  constructor(\n    private store: Store<AppStore>,\n    private actions$: Actions,\n    private snackBar: MatSnackBar,\n    private translationService: TranslationService\n  ) {}\n\n  @Effect({ dispatch: false })\n  infoEffect = this.actions$.pipe(\n    ofType<SnackbarInfoAction>(SnackbarActionTypes.Info),\n    map((action: SnackbarInfoAction) => {\n      this.showSnackBar(action, 'info-snackbar');\n    })\n  );\n\n  @Effect({ dispatch: false })\n  warningEffect = this.actions$.pipe(\n    ofType<SnackbarWarningAction>(SnackbarActionTypes.Warning),\n    map((action: SnackbarWarningAction) => {\n      this.showSnackBar(action, 'warning-snackbar');\n    })\n  );\n\n  @Effect({ dispatch: false })\n  errorEffect = this.actions$.pipe(\n    ofType<SnackbarErrorAction>(SnackbarActionTypes.Error),\n    map((action: SnackbarErrorAction) => {\n      this.showSnackBar(action, 'error-snackbar');\n    })\n  );\n\n  private showSnackBar(action: SnackbarAction, panelClass: string) {\n    const message = this.translate(action.payload, action.params);\n\n    let actionName: string = null;\n    if (action.userAction) {\n      actionName = this.translate(action.userAction.title);\n    }\n\n    const snackBarRef = this.snackBar.open(message, actionName, {\n      duration: action.duration || 4000,\n      panelClass: panelClass\n    });\n\n    if (action.userAction) {\n      snackBarRef.onAction().subscribe(() => {\n        this.store.dispatch(action.userAction.action);\n      });\n    }\n  }\n\n  private translate(message: string, params?: Object): string {\n    return this.translationService.instant(message, params);\n  }\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport enum SearchOptionIds {\n  Files = 'content',\n  Folders = 'folder',\n  Libraries = 'libraries'\n}\n\nexport interface SearchOptionModel {\n  id: SearchOptionIds;\n  key: string;\n  value: boolean;\n  shouldDisable(): boolean;\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { AppStore } from '../states/app.state';\nimport { createSelector } from '@ngrx/store';\n\nexport const selectApp = (state: AppStore) => state.app;\n\nexport const getHeaderColor = createSelector(\n  selectApp,\n  state => state.headerColor\n);\n\nexport const getAppName = createSelector(\n  selectApp,\n  state => state.appName\n);\n\nexport const getLogoPath = createSelector(\n  selectApp,\n  state => state.logoPath\n);\n\nexport const getLanguagePickerState = createSelector(\n  selectApp,\n  state => state.languagePicker\n);\n\nexport const getUserProfile = createSelector(\n  selectApp,\n  state => state.user\n);\n\nexport const getCurrentFolder = createSelector(\n  selectApp,\n  state => state.navigation.currentFolder\n);\n\nexport const getAppSelection = createSelector(\n  selectApp,\n  state => state.selection\n);\n\nexport const getSharedUrl = createSelector(\n  selectApp,\n  state => state.sharedUrl\n);\n\nexport const getNavigationState = createSelector(\n  selectApp,\n  state => state.navigation\n);\n\nexport const isInfoDrawerOpened = createSelector(\n  selectApp,\n  state => state.infoDrawerOpened\n);\n\nexport const showFacetFilter = createSelector(\n  selectApp,\n  state => state.showFacetFilter\n);\n\nexport const getDocumentDisplayMode = createSelector(\n  selectApp,\n  state => state.documentDisplayMode\n);\n\nexport const getRepositoryStatus = createSelector(\n  selectApp,\n  state => state.repository\n);\n\nexport const isQuickShareEnabled = createSelector(\n  getRepositoryStatus,\n  info => info.status.isQuickShareEnabled\n);\n\nexport const isAdmin = createSelector(\n  selectApp,\n  state => state.user.isAdmin\n);\n\nexport const getSideNavState = createSelector(\n  getAppSelection,\n  getNavigationState,\n  (selection, navigation) => {\n    return {\n      selection,\n      navigation\n    };\n  }\n);\n\nexport const getRuleContext = createSelector(\n  getAppSelection,\n  getNavigationState,\n  getUserProfile,\n  getRepositoryStatus,\n  (selection, navigation, profile, repository) => {\n    return {\n      selection,\n      navigation,\n      profile,\n      repository\n    };\n  }\n);\n\nexport const infoDrawerMetadataAspect = createSelector(\n  selectApp,\n  state => state.infoDrawerMetadataAspect\n);\n\nexport const getProcessServicesState = createSelector(\n  selectApp,\n  state => state.processServices\n);\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { SnackbarEffects } from './effects/snackbar.effects';\nimport { DialogEffects } from './effects/dialog.effects';\nimport { RouterEffects } from './effects/router.effects';\n\n@NgModule({\n  imports: [\n    EffectsModule.forFeature([SnackbarEffects, DialogEffects, RouterEffects])\n  ]\n})\nexport class SharedStoreModule {}\n"],"names":["ofType","map","Injectable","Actions","MatDialog","tslib_1.__decorate","Effect","store","router","Store","Router","snackBar","MatSnackBar","TranslationService","createSelector","NgModule","EffectsModule"],"mappings":"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"}
