{"version":3,"sources":["ng://@alfresco/aca-shared/store/actions/app.actions.ts","ng://@alfresco/aca-shared/store/actions/library.actions.ts","ng://@alfresco/aca-shared/store/actions/node.actions.ts","ng://@alfresco/aca-shared/store/actions/router.actions.ts","ng://@alfresco/aca-shared/store/actions/search.actions.ts","ng://@alfresco/aca-shared/store/actions/snackbar.actions.ts","ng://@alfresco/aca-shared/store/actions/upload.actions.ts","ng://@alfresco/aca-shared/store/actions/viewer.actions.ts","ng://@alfresco/aca-shared/store/actions/metadata-aspect.actions.ts","ng://@alfresco/aca-shared/store/actions/template.actions.ts","ng://@alfresco/aca-shared/store/actions/contextmenu.actions.ts","node_modules/tslib/tslib.es6.js","ng://@alfresco/aca-shared/store/effects/dialog.effects.ts","ng://@alfresco/aca-shared/store/effects/router.effects.ts","ng://@alfresco/aca-shared/store/effects/snackbar.effects.ts","ng://@alfresco/aca-shared/store/selectors/app.selectors.ts","ng://@alfresco/aca-shared/store/store.module.ts","ng://@alfresco/aca-shared/store/models/search-option.model.ts"],"names":["SetInitialState","SetLanguagePicker","SetCurrentFolder","SetCurrentUrl","SetUserProfile","SetRepositoryInfo","ToggleInfoDrawer","ToggleDocumentDisplayMode","Logout","ReloadDocumentList","ResetSelection","SetInfoDrawerState","SetInfoDrawerMetadataAspect","CloseModalDialogs","ToggleProcessServices","SetInitialStateAction","payload","this","type","AppActionTypes","SetLanguagePickerAction","SetCurrentFolderAction","SetCurrentUrlAction","SetUserProfileAction","ToggleInfoDrawerAction","LogoutAction","ReloadDocumentListAction","ResetSelectionAction","SetInfoDrawerStateAction","CloseModalDialogsAction","SetRepositoryInfoAction","ToggleProcessServicesAction","Delete","Create","Navigate","Update","Leave","DeleteLibraryAction","LibraryActionTypes","CreateLibraryAction","NavigateLibraryAction","UpdateLibraryAction","LeaveLibraryAction","SetSelection","UndoDelete","RestoreDeleted","PurgeDeleted","Download","CreateFolder","EditFolder","Share","Unshare","Copy","Move","ManagePermissions","PrintFile","ManageVersions","EditOffline","UnlockForWriting","AddFavorite","RemoveFavorite","SetSelectedNodesAction","NodeActionTypes","DeleteNodesAction","UndoDeleteNodesAction","RestoreDeletedNodesAction","PurgeDeletedNodesAction","DownloadNodesAction","CreateFolderAction","EditFolderAction","ShareNodeAction","UnshareNodesAction","CopyNodesAction","MoveNodesAction","ManagePermissionsAction","PrintFileAction","ManageVersionsAction","EditOfflineAction","UnlockWriteAction","AddFavoriteAction","RemoveFavoriteAction","NavigateUrl","NavigateRoute","NavigateFolder","NavigateParentFolder","NavigateUrlAction","RouterActionTypes","NavigateRouteAction","NavigateToFolder","NavigateToParentFolder","SearchByTerm","ToggleFilter","ShowFilter","HideFilter","SearchByTermAction","searchOptions","SearchActionTypes","ToggleSearchFilterAction","ShowSearchFilterAction","HideSearchFilterAction","Info","Warning","Error","SnackbarUserAction","title","action","SnackbarInfoAction","params","SnackbarActionTypes","duration","SnackbarWarningAction","SnackbarErrorAction","UploadFiles","UploadFolder","UploadFileVersion","UploadFilesAction","UploadActionTypes","UploadFolderAction","UploadFileVersionAction","ViewFile","ViewNode","FullScreen","ClosePreview","ViewFileAction","parentId","ViewerActionTypes","ViewNodeAction","nodeId","viewNodeExtras","FullscreenViewerAction","ClosePreviewAction","SET_INFO_DRAWER_METADATA_ASPECT","SetInfoDrawerMetadataAspectAction","FileFromTemplate","FolderFromTemplate","CreateFromTemplate","CreateFromTemplateSuccess","TemplateActionTypes","node","ContextMenu","event","ContextMenuActionTypes","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","DialogEffects","actions$","matDialog","_this","closeAll$","pipe","ofType","map","closeAll","Injectable","Actions","MatDialog","tslib_1.__decorate","Effect","dispatch","RouterEffects","store","router","navigateUrl$","navigateByUrl","navigateRoute$","navigate","navigateToFolder$","entry","navigateToFolder","navigateToParentFolder$","navigateToParentFolder","prototype","link","path","id","name","elements","isLibraryPath","isLibraryContent","parent_1","area","setTimeout","parent_2","Store","Router","SnackbarEffects","snackBar","translationService","infoEffect","showSnackBar","warningEffect","errorEffect","panelClass","message","translate","actionName","userAction","snackBarRef","open","onAction","subscribe","instant","MatSnackBar","TranslationService","selectApp","state","app","getHeaderColor","createSelector","headerColor","getAppName","appName","getLogoPath","logoPath","getLanguagePickerState","languagePicker","getUserProfile","user","getCurrentFolder","navigation","currentFolder","getAppSelection","selection","getSharedUrl","sharedUrl","getNavigationState","isInfoDrawerOpened","infoDrawerOpened","showFacetFilter","getDocumentDisplayMode","documentDisplayMode","getRepositoryStatus","repository","isQuickShareEnabled","info","status","isAdmin","getSideNavState","getRuleContext","profile","infoDrawerMetadataAspect","getProcessServicesState","processServices","SharedStoreModule","NgModule","args","imports","EffectsModule","forFeature","Files","Folders","Libraries"],"mappings":"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","sourcesContent":["/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { Node, Person, Group, RepositoryInfo } from '@alfresco/js-api';\nimport { AppState } from '../states/app.state';\n\nexport enum AppActionTypes {\n  SetInitialState = 'SET_INITIAL_STATE',\n  SetLanguagePicker = 'SET_LANGUAGE_PICKER',\n  SetCurrentFolder = 'SET_CURRENT_FOLDER',\n  SetCurrentUrl = 'SET_CURRENT_URL',\n  SetUserProfile = 'SET_USER_PROFILE',\n  SetRepositoryInfo = 'SET_REPOSITORY_INFO',\n  ToggleInfoDrawer = 'TOGGLE_INFO_DRAWER',\n  ToggleDocumentDisplayMode = 'TOGGLE_DOCUMENT_DISPLAY_MODE',\n  Logout = 'LOGOUT',\n  ReloadDocumentList = 'RELOAD_DOCUMENT_LIST',\n  ResetSelection = 'RESET_SELECTION',\n  SetInfoDrawerState = 'SET_INFO_DRAWER_STATE',\n  SetInfoDrawerMetadataAspect = 'SET_INFO_DRAWER_METADATA_ASPECT',\n  CloseModalDialogs = 'CLOSE_MODAL_DIALOGS',\n  ToggleProcessServices = 'TOGGLE_PROCESS_SERVICES'\n}\n\nexport class SetInitialStateAction implements Action {\n  readonly type = AppActionTypes.SetInitialState;\n\n  constructor(public payload: AppState) {}\n}\n\nexport class SetLanguagePickerAction implements Action {\n  readonly type = AppActionTypes.SetLanguagePicker;\n\n  constructor(public payload: boolean) {}\n}\n\nexport class SetCurrentFolderAction implements Action {\n  readonly type = AppActionTypes.SetCurrentFolder;\n\n  constructor(public payload: Node) {}\n}\n\nexport class SetCurrentUrlAction implements Action {\n  readonly type = AppActionTypes.SetCurrentUrl;\n\n  constructor(public payload: string) {}\n}\n\nexport class SetUserProfileAction implements Action {\n  readonly type = AppActionTypes.SetUserProfile;\n\n  constructor(public payload: { person: Person; groups: Group[] }) {}\n}\n\nexport class ToggleInfoDrawerAction implements Action {\n  readonly type = AppActionTypes.ToggleInfoDrawer;\n}\n\nexport class ToggleDocumentDisplayMode implements Action {\n  readonly type = AppActionTypes.ToggleDocumentDisplayMode;\n}\n\nexport class LogoutAction implements Action {\n  readonly type = AppActionTypes.Logout;\n}\n\nexport class ReloadDocumentListAction implements Action {\n  readonly type = AppActionTypes.ReloadDocumentList;\n\n  constructor(public payload?: any) {}\n}\n\nexport class ResetSelectionAction implements Action {\n  readonly type = AppActionTypes.ResetSelection;\n\n  constructor(public payload?: any) {}\n}\n\nexport class SetInfoDrawerStateAction implements Action {\n  readonly type = AppActionTypes.SetInfoDrawerState;\n\n  constructor(public payload: boolean) {}\n}\n\nexport class CloseModalDialogsAction implements Action {\n  readonly type = AppActionTypes.CloseModalDialogs;\n}\n\nexport class SetRepositoryInfoAction implements Action {\n  readonly type = AppActionTypes.SetRepositoryInfo;\n\n  constructor(public payload: RepositoryInfo) {}\n}\n\nexport class ToggleProcessServicesAction implements Action {\n  readonly type = AppActionTypes.ToggleProcessServices;\n\n  constructor(public payload: boolean) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { SiteBody } from '@alfresco/js-api';\n\nexport enum LibraryActionTypes {\n  Delete = 'DELETE_LIBRARY',\n  Create = 'CREATE_LIBRARY',\n  Navigate = 'NAVIGATE_LIBRARY',\n  Update = 'UPDATE_LIBRARY',\n  Leave = 'LEAVE_LIBRARY'\n}\n\nexport class DeleteLibraryAction implements Action {\n  readonly type = LibraryActionTypes.Delete;\n\n  constructor(public payload?: string) {}\n}\n\nexport class CreateLibraryAction implements Action {\n  readonly type = LibraryActionTypes.Create;\n}\n\nexport class NavigateLibraryAction implements Action {\n  readonly type = LibraryActionTypes.Navigate;\n\n  constructor(public payload?: string) {}\n}\n\nexport class UpdateLibraryAction implements Action {\n  readonly type = LibraryActionTypes.Update;\n\n  constructor(public payload?: SiteBody) {}\n}\n\nexport class LeaveLibraryAction implements Action {\n  readonly type = LibraryActionTypes.Leave;\n\n  constructor(public payload?: string) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { MinimalNodeEntity } from '@alfresco/js-api';\n\nexport enum NodeActionTypes {\n  SetSelection = 'SET_SELECTED_NODES',\n  Delete = 'DELETE_NODES',\n  UndoDelete = 'UNDO_DELETE_NODES',\n  RestoreDeleted = 'RESTORE_DELETED_NODES',\n  PurgeDeleted = 'PURGE_DELETED_NODES',\n  Download = 'DOWNLOAD_NODES',\n  CreateFolder = 'CREATE_FOLDER',\n  EditFolder = 'EDIT_FOLDER',\n  Share = 'SHARE_NODE',\n  Unshare = 'UNSHARE_NODES',\n  Copy = 'COPY_NODES',\n  Move = 'MOVE_NODES',\n  ManagePermissions = 'MANAGE_PERMISSIONS',\n  PrintFile = 'PRINT_FILE',\n  ManageVersions = 'MANAGE_VERSIONS',\n  EditOffline = 'EDIT_OFFLINE',\n  UnlockForWriting = 'UNLOCK_WRITE_LOCK',\n  AddFavorite = 'ADD_FAVORITE',\n  RemoveFavorite = 'REMOVE_FAVORITE'\n}\n\nexport class SetSelectedNodesAction implements Action {\n  readonly type = NodeActionTypes.SetSelection;\n\n  constructor(public payload: MinimalNodeEntity[] = []) {}\n}\n\nexport class DeleteNodesAction implements Action {\n  readonly type = NodeActionTypes.Delete;\n\n  constructor(public payload: MinimalNodeEntity[] = []) {}\n}\n\nexport class UndoDeleteNodesAction implements Action {\n  readonly type = NodeActionTypes.UndoDelete;\n\n  constructor(public payload: any[] = []) {}\n}\n\nexport class RestoreDeletedNodesAction implements Action {\n  readonly type = NodeActionTypes.RestoreDeleted;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class PurgeDeletedNodesAction implements Action {\n  readonly type = NodeActionTypes.PurgeDeleted;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class DownloadNodesAction implements Action {\n  readonly type = NodeActionTypes.Download;\n\n  constructor(public payload: MinimalNodeEntity[] = []) {}\n}\n\nexport class CreateFolderAction implements Action {\n  readonly type = NodeActionTypes.CreateFolder;\n\n  constructor(public payload: string) {}\n}\n\nexport class EditFolderAction implements Action {\n  readonly type = NodeActionTypes.EditFolder;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class ShareNodeAction implements Action {\n  readonly type = NodeActionTypes.Share;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class UnshareNodesAction implements Action {\n  readonly type = NodeActionTypes.Unshare;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class CopyNodesAction implements Action {\n  readonly type = NodeActionTypes.Copy;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class MoveNodesAction implements Action {\n  readonly type = NodeActionTypes.Move;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class ManagePermissionsAction implements Action {\n  readonly type = NodeActionTypes.ManagePermissions;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class PrintFileAction implements Action {\n  readonly type = NodeActionTypes.PrintFile;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class ManageVersionsAction implements Action {\n  readonly type = NodeActionTypes.ManageVersions;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class EditOfflineAction implements Action {\n  readonly type = NodeActionTypes.EditOffline;\n\n  constructor(public payload: any) {}\n}\n\nexport class UnlockWriteAction implements Action {\n  readonly type = NodeActionTypes.UnlockForWriting;\n\n  constructor(public payload: any) {}\n}\n\nexport class AddFavoriteAction implements Action {\n  readonly type = NodeActionTypes.AddFavorite;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class RemoveFavoriteAction implements Action {\n  readonly type = NodeActionTypes.RemoveFavorite;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { MinimalNodeEntity } from '@alfresco/js-api';\n\nexport enum RouterActionTypes {\n  NavigateUrl = 'NAVIGATE_URL',\n  NavigateRoute = 'NAVIGATE_ROUTE',\n  NavigateFolder = 'NAVIGATE_FOLDER',\n  NavigateParentFolder = 'NAVIGATE_PARENT_FOLDER'\n}\n\nexport class NavigateUrlAction implements Action {\n  readonly type = RouterActionTypes.NavigateUrl;\n\n  constructor(public payload: string) {}\n}\n\nexport class NavigateRouteAction implements Action {\n  readonly type = RouterActionTypes.NavigateRoute;\n\n  constructor(public payload: any[]) {}\n}\n\nexport class NavigateToFolder implements Action {\n  readonly type = RouterActionTypes.NavigateFolder;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class NavigateToParentFolder implements Action {\n  readonly type = RouterActionTypes.NavigateParentFolder;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { SearchOptionModel } from '../models/search-option.model';\n\nexport enum SearchActionTypes {\n  SearchByTerm = 'SEARCH_BY_TERM',\n  ToggleFilter = 'TOGGLE_SEARCH_FILTER',\n  ShowFilter = 'SHOW_SEARCH_FILTER',\n  HideFilter = 'HIDE_SEARCH_FILTER'\n}\n\nexport class SearchByTermAction implements Action {\n  readonly type = SearchActionTypes.SearchByTerm;\n  constructor(\n    public payload: string,\n    public searchOptions?: SearchOptionModel[]\n  ) {}\n}\n\nexport class ToggleSearchFilterAction implements Action {\n  readonly type = SearchActionTypes.ToggleFilter;\n}\n\nexport class ShowSearchFilterAction implements Action {\n  readonly type = SearchActionTypes.ShowFilter;\n}\n\nexport class HideSearchFilterAction implements Action {\n  readonly type = SearchActionTypes.HideFilter;\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\n\nexport enum SnackbarActionTypes {\n  Info = 'SNACKBAR_INFO',\n  Warning = 'SNACKBAR_WARNING',\n  Error = 'SNACKBAR_ERROR'\n}\n\nexport interface SnackbarAction extends Action {\n  payload: string;\n  params?: Object;\n  userAction?: SnackbarUserAction;\n  duration: number;\n}\n\nexport class SnackbarUserAction {\n  constructor(public title: string, public action: Action) {}\n}\n\nexport class SnackbarInfoAction implements SnackbarAction {\n  readonly type = SnackbarActionTypes.Info;\n\n  userAction?: SnackbarUserAction;\n  duration = 4000;\n\n  constructor(public payload: string, public params?: Object) {}\n}\n\nexport class SnackbarWarningAction implements SnackbarAction {\n  readonly type = SnackbarActionTypes.Warning;\n\n  userAction?: SnackbarUserAction;\n  duration = 4000;\n\n  constructor(public payload: string, public params?: Object) {}\n}\n\nexport class SnackbarErrorAction implements SnackbarAction {\n  readonly type = SnackbarActionTypes.Error;\n\n  userAction?: SnackbarUserAction;\n  duration = 4000;\n\n  constructor(public payload: string, public params?: Object) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\n\nexport enum UploadActionTypes {\n  UploadFiles = 'UPLOAD_FILES',\n  UploadFolder = 'UPLOAD_FOLDER',\n  UploadFileVersion = 'UPLOAD_FILE_VERSION'\n}\n\nexport class UploadFilesAction implements Action {\n  readonly type = UploadActionTypes.UploadFiles;\n\n  constructor(public payload: any) {}\n}\n\nexport class UploadFolderAction implements Action {\n  readonly type = UploadActionTypes.UploadFolder;\n\n  constructor(public payload: any) {}\n}\n\nexport class UploadFileVersionAction implements Action {\n  readonly type = UploadActionTypes.UploadFileVersion;\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { MinimalNodeEntity } from '@alfresco/js-api';\n\nexport enum ViewerActionTypes {\n  ViewFile = 'VIEW_FILE',\n  ViewNode = 'VIEW_NODE',\n  FullScreen = 'FULLSCREEN_VIEWER',\n  ClosePreview = 'CLOSE_PREVIEW'\n}\n\nexport interface ViewNodeExtras {\n  location?: string;\n  path?: string;\n}\n\nexport class ViewFileAction implements Action {\n  readonly type = ViewerActionTypes.ViewFile;\n\n  constructor(public payload?: MinimalNodeEntity, public parentId?: string) {}\n}\n\nexport class ViewNodeAction implements Action {\n  readonly type = ViewerActionTypes.ViewNode;\n\n  constructor(public nodeId: string, public viewNodeExtras?: ViewNodeExtras) {}\n}\n\nexport class FullscreenViewerAction implements Action {\n  readonly type = ViewerActionTypes.FullScreen;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class ClosePreviewAction implements Action {\n  readonly type = ViewerActionTypes.ClosePreview;\n  constructor(public payload?: MinimalNodeEntity) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\n\nexport const SET_INFO_DRAWER_METADATA_ASPECT =\n  'SET_INFO_DRAWER_METADATA_ASPECT';\n\nexport class SetInfoDrawerMetadataAspectAction implements Action {\n  readonly type = SET_INFO_DRAWER_METADATA_ASPECT;\n  constructor(public payload: string) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { Node } from '@alfresco/js-api';\n\nexport enum TemplateActionTypes {\n  FileFromTemplate = 'FILE_FROM_TEMPLATE',\n  FolderFromTemplate = 'FOLDER_FROM_TEMPLATE',\n  CreateFromTemplate = 'CREATE_FROM_TEMPLATE',\n  CreateFromTemplateSuccess = 'CREATE_FROM_TEMPLATE_SUCCESS'\n}\n\nexport class FileFromTemplate implements Action {\n  readonly type = TemplateActionTypes.FileFromTemplate;\n\n  constructor() {}\n}\n\nexport class FolderFromTemplate implements Action {\n  readonly type = TemplateActionTypes.FolderFromTemplate;\n\n  constructor() {}\n}\n\nexport class CreateFromTemplate implements Action {\n  readonly type = TemplateActionTypes.CreateFromTemplate;\n\n  constructor(public payload: Node) {}\n}\n\nexport class CreateFromTemplateSuccess implements Action {\n  readonly type = TemplateActionTypes.CreateFromTemplateSuccess;\n\n  constructor(public node: Node) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\n\nexport enum ContextMenuActionTypes {\n  ContextMenu = 'CONTEXT_MENU'\n}\n\nexport class ContextMenu implements Action {\n  readonly type = ContextMenuActionTypes.ContextMenu;\n\n  constructor(public event: MouseEvent) {}\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  CloseModalDialogsAction,\n  AppActionTypes\n} from '../actions/app.actions';\n\n@Injectable()\nexport class DialogEffects {\n  constructor(private actions$: Actions, private matDialog: MatDialog) {}\n\n  @Effect({ dispatch: false })\n  closeAll$ = this.actions$.pipe(\n    ofType<CloseModalDialogsAction>(AppActionTypes.CloseModalDialogs),\n    map(() => this.matDialog.closeAll())\n  );\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { MinimalNodeEntryEntity, PathInfoEntity } from '@alfresco/js-api';\nimport { map } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { AppStore } from '../states/app.state';\nimport {\n  NavigateUrlAction,\n  RouterActionTypes,\n  NavigateRouteAction,\n  NavigateToFolder,\n  NavigateToParentFolder\n} from '../actions/router.actions';\nimport { SnackbarErrorAction } from '../actions/snackbar.actions';\n\n@Injectable()\nexport class RouterEffects {\n  constructor(\n    private store: Store<AppStore>,\n    private actions$: Actions,\n    private router: Router\n  ) {}\n\n  @Effect({ dispatch: false })\n  navigateUrl$ = this.actions$.pipe(\n    ofType<NavigateUrlAction>(RouterActionTypes.NavigateUrl),\n    map(action => {\n      if (action.payload) {\n        this.router.navigateByUrl(action.payload);\n      }\n    })\n  );\n\n  @Effect({ dispatch: false })\n  navigateRoute$ = this.actions$.pipe(\n    ofType<NavigateRouteAction>(RouterActionTypes.NavigateRoute),\n    map(action => {\n      this.router.navigate(action.payload);\n    })\n  );\n\n  @Effect({ dispatch: false })\n  navigateToFolder$ = this.actions$.pipe(\n    ofType<NavigateToFolder>(RouterActionTypes.NavigateFolder),\n    map(action => {\n      if (action.payload && action.payload.entry) {\n        this.navigateToFolder(action.payload.entry);\n      }\n    })\n  );\n\n  @Effect({ dispatch: false })\n  navigateToParentFolder$ = this.actions$.pipe(\n    ofType<NavigateToParentFolder>(RouterActionTypes.NavigateParentFolder),\n    map(action => {\n      if (action.payload && action.payload.entry) {\n        this.navigateToParentFolder(action.payload.entry);\n      }\n    })\n  );\n\n  private navigateToFolder(node: MinimalNodeEntryEntity) {\n    let link: any[] = null;\n    const { path, id } = node;\n\n    if (path && path.name && path.elements) {\n      const isLibraryPath = this.isLibraryContent(<PathInfoEntity>path);\n\n      const parent = path.elements[path.elements.length - 1];\n      const area = isLibraryPath ? '/libraries' : '/personal-files';\n\n      if (!isLibraryPath) {\n        link = [area, id];\n      } else {\n        // parent.id could be 'Site' folder or child as 'documentLibrary'\n        link = [area, parent.name === 'Sites' ? {} : id];\n      }\n\n      setTimeout(() => {\n        this.router.navigate(link);\n      }, 10);\n    } else {\n      this.router.navigate(['/personal-files', node.id]);\n    }\n  }\n\n  private navigateToParentFolder(node: MinimalNodeEntryEntity) {\n    let link: any[] = null;\n    const { path } = node;\n\n    if (path && path.name && path.elements) {\n      const isLibraryPath = this.isLibraryContent(<PathInfoEntity>path);\n\n      const parent = path.elements[path.elements.length - 1];\n      const area = isLibraryPath ? '/libraries' : '/personal-files';\n\n      if (!isLibraryPath) {\n        link = [area, parent.id];\n      } else {\n        // parent.id could be 'Site' folder or child as 'documentLibrary'\n        link = [area, parent.name === 'Sites' ? {} : parent.id];\n      }\n\n      setTimeout(() => {\n        this.router.navigate(link);\n      }, 10);\n    } else {\n      this.store.dispatch(\n        new SnackbarErrorAction('APP.MESSAGES.ERRORS.CANNOT_NAVIGATE_LOCATION')\n      );\n    }\n  }\n\n  private isLibraryContent(path: PathInfoEntity): boolean {\n    if (\n      path &&\n      path.elements.length >= 2 &&\n      path.elements[1].name === 'Sites'\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { TranslationService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { map } from 'rxjs/operators';\nimport { AppStore } from '../states/app.state';\nimport {\n  SnackbarInfoAction,\n  SnackbarActionTypes,\n  SnackbarWarningAction,\n  SnackbarErrorAction,\n  SnackbarAction\n} from '../actions/snackbar.actions';\n\n@Injectable()\nexport class SnackbarEffects {\n  constructor(\n    private store: Store<AppStore>,\n    private actions$: Actions,\n    private snackBar: MatSnackBar,\n    private translationService: TranslationService\n  ) {}\n\n  @Effect({ dispatch: false })\n  infoEffect = this.actions$.pipe(\n    ofType<SnackbarInfoAction>(SnackbarActionTypes.Info),\n    map((action: SnackbarInfoAction) => {\n      this.showSnackBar(action, 'info-snackbar');\n    })\n  );\n\n  @Effect({ dispatch: false })\n  warningEffect = this.actions$.pipe(\n    ofType<SnackbarWarningAction>(SnackbarActionTypes.Warning),\n    map((action: SnackbarWarningAction) => {\n      this.showSnackBar(action, 'warning-snackbar');\n    })\n  );\n\n  @Effect({ dispatch: false })\n  errorEffect = this.actions$.pipe(\n    ofType<SnackbarErrorAction>(SnackbarActionTypes.Error),\n    map((action: SnackbarErrorAction) => {\n      this.showSnackBar(action, 'error-snackbar');\n    })\n  );\n\n  private showSnackBar(action: SnackbarAction, panelClass: string) {\n    const message = this.translate(action.payload, action.params);\n\n    let actionName: string = null;\n    if (action.userAction) {\n      actionName = this.translate(action.userAction.title);\n    }\n\n    const snackBarRef = this.snackBar.open(message, actionName, {\n      duration: action.duration || 4000,\n      panelClass: panelClass\n    });\n\n    if (action.userAction) {\n      snackBarRef.onAction().subscribe(() => {\n        this.store.dispatch(action.userAction.action);\n      });\n    }\n  }\n\n  private translate(message: string, params?: Object): string {\n    return this.translationService.instant(message, params);\n  }\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { AppStore } from '../states/app.state';\nimport { createSelector } from '@ngrx/store';\n\nexport const selectApp = (state: AppStore) => state.app;\n\nexport const getHeaderColor = createSelector(\n  selectApp,\n  state => state.headerColor\n);\n\nexport const getAppName = createSelector(\n  selectApp,\n  state => state.appName\n);\n\nexport const getLogoPath = createSelector(\n  selectApp,\n  state => state.logoPath\n);\n\nexport const getLanguagePickerState = createSelector(\n  selectApp,\n  state => state.languagePicker\n);\n\nexport const getUserProfile = createSelector(\n  selectApp,\n  state => state.user\n);\n\nexport const getCurrentFolder = createSelector(\n  selectApp,\n  state => state.navigation.currentFolder\n);\n\nexport const getAppSelection = createSelector(\n  selectApp,\n  state => state.selection\n);\n\nexport const getSharedUrl = createSelector(\n  selectApp,\n  state => state.sharedUrl\n);\n\nexport const getNavigationState = createSelector(\n  selectApp,\n  state => state.navigation\n);\n\nexport const isInfoDrawerOpened = createSelector(\n  selectApp,\n  state => state.infoDrawerOpened\n);\n\nexport const showFacetFilter = createSelector(\n  selectApp,\n  state => state.showFacetFilter\n);\n\nexport const getDocumentDisplayMode = createSelector(\n  selectApp,\n  state => state.documentDisplayMode\n);\n\nexport const getRepositoryStatus = createSelector(\n  selectApp,\n  state => state.repository\n);\n\nexport const isQuickShareEnabled = createSelector(\n  getRepositoryStatus,\n  info => info.status.isQuickShareEnabled\n);\n\nexport const isAdmin = createSelector(\n  selectApp,\n  state => state.user.isAdmin\n);\n\nexport const getSideNavState = createSelector(\n  getAppSelection,\n  getNavigationState,\n  (selection, navigation) => {\n    return {\n      selection,\n      navigation\n    };\n  }\n);\n\nexport const getRuleContext = createSelector(\n  getAppSelection,\n  getNavigationState,\n  getUserProfile,\n  getRepositoryStatus,\n  (selection, navigation, profile, repository) => {\n    return {\n      selection,\n      navigation,\n      profile,\n      repository\n    };\n  }\n);\n\nexport const infoDrawerMetadataAspect = createSelector(\n  selectApp,\n  state => state.infoDrawerMetadataAspect\n);\n\nexport const getProcessServicesState = createSelector(\n  selectApp,\n  state => state.processServices\n);\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { SnackbarEffects } from './effects/snackbar.effects';\nimport { DialogEffects } from './effects/dialog.effects';\nimport { RouterEffects } from './effects/router.effects';\n\n@NgModule({\n  imports: [\n    EffectsModule.forFeature([SnackbarEffects, DialogEffects, RouterEffects])\n  ]\n})\nexport class SharedStoreModule {}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport enum SearchOptionIds {\n  Files = 'content',\n  Folders = 'folder',\n  Libraries = 'libraries'\n}\n\nexport interface SearchOptionModel {\n  id: SearchOptionIds;\n  key: string;\n  value: boolean;\n  shouldDisable(): boolean;\n}\n"]}