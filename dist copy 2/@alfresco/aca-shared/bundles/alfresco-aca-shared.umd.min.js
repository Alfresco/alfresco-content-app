!(function(e, t) {
  'object' == typeof exports && 'undefined' != typeof module
    ? t(
        exports,
        require('@angular/router'),
        require('@alfresco/adf-core'),
        require('@angular/material/icon'),
        require('@angular/common'),
        require('@ngx-translate/core'),
        require('rxjs/operators'),
        require('rxjs'),
        require('@ngrx/store'),
        require('@alfresco/aca-shared/store'),
        require('@angular/core')
      )
    : 'function' == typeof define && define.amd
    ? define('@alfresco/aca-shared', [
        'exports',
        '@angular/router',
        '@alfresco/adf-core',
        '@angular/material/icon',
        '@angular/common',
        '@ngx-translate/core',
        'rxjs/operators',
        'rxjs',
        '@ngrx/store',
        '@alfresco/aca-shared/store',
        '@angular/core'
      ], t)
    : t(
        ((e.alfresco = e.alfresco || {}), (e.alfresco['aca-shared'] = {})),
        e.ng.router,
        e['@alfresco/adf-core'],
        e.ng.material.icon,
        e.ng.common,
        e['@ngx-translate/core'],
        e.rxjs.operators,
        e.rxjs,
        e['@ngrx/store'],
        e.alfresco['aca-shared'].store,
        e.ng.core
      );
})(this, function(e, t, o, r, n, a, i, c, s, p, u) {
  'use strict';
  var l = (function() {
      function e() {
        this.scrollable = !1;
      }
      return (
        (e.decorators = [
          {
            type: u.Component,
            args: [
              {
                selector: 'aca-page-layout-content',
                template: '\n    <ng-content></ng-content>\n  ',
                encapsulation: u.ViewEncapsulation.None,
                changeDetection: u.ChangeDetectionStrategy.OnPush,
                host: { class: 'aca-page-layout-content' }
              }
            ]
          }
        ]),
        (e.propDecorators = {
          scrollable: [
            { type: u.Input },
            { type: u.HostBinding, args: ['class.scrollable'] }
          ]
        }),
        e
      );
    })(),
    d = (function() {
      function e() {}
      return (
        (e.decorators = [
          {
            type: u.Component,
            args: [
              {
                selector: 'aca-page-layout-error',
                template: '\n    <ng-content></ng-content>\n  ',
                encapsulation: u.ViewEncapsulation.None,
                changeDetection: u.ChangeDetectionStrategy.OnPush,
                host: { class: 'aca-page-layout-error' }
              }
            ]
          }
        ]),
        e
      );
    })(),
    f = (function() {
      function e() {}
      return (
        (e.decorators = [
          {
            type: u.Component,
            args: [
              {
                selector: 'aca-page-layout-header',
                template: '<ng-content></ng-content>',
                encapsulation: u.ViewEncapsulation.None,
                changeDetection: u.ChangeDetectionStrategy.OnPush,
                host: { class: 'aca-page-layout-header' }
              }
            ]
          }
        ]),
        e
      );
    })(),
    h = (function() {
      function e() {
        this.hasError = !1;
      }
      return (
        (e.decorators = [
          {
            type: u.Component,
            args: [
              {
                selector: 'aca-page-layout',
                template:
                  '<ng-content select="aca-page-layout-header"></ng-content>\n<ng-content select="aca-page-layout-error" *ngIf="hasError"></ng-content>\n<ng-content select="aca-page-layout-content" *ngIf="!hasError"></ng-content>\n',
                encapsulation: u.ViewEncapsulation.None,
                host: { class: 'aca-page-layout' },
                changeDetection: u.ChangeDetectionStrategy.OnPush,
                styles: [
                  '.aca-page-layout{display:flex;flex-direction:column;flex:1;height:100%;overflow:hidden;min-height:0}.aca-page-layout .aca-page-layout-header{display:flex;align-items:center;flex:0 0 65px;flex-basis:48px;background:#fafafa;border-bottom:1px solid var(--theme-border-color,rgba(0,0,0,.07));padding:0 24px}.aca-page-layout .aca-page-layout-content,.aca-page-layout .aca-page-layout-error{display:flex;flex-direction:row;flex:1;height:100%;overflow:hidden}.aca-page-layout .main-content{display:flex;flex-direction:column;flex:1;height:100%;overflow:hidden;min-height:0}.aca-page-layout .scrollable,.aca-page-layout .scrollable .main-content{overflow:auto!important}.aca-page-layout .sidebar{display:block;height:100%;overflow-y:scroll;max-width:350px;width:350px}[dir=rtl] .aca-page-layout .main-content{border-left:1px solid var(--theme-border-color,rgba(0,0,0,.07))}[dir=ltr] .aca-page-layout .main-content{border-right:1px solid var(--theme-border-color,rgba(0,0,0,.07))}'
                ]
              }
            ]
          }
        ]),
        (e.propDecorators = { hasError: [{ type: u.Input }] }),
        e
      );
    })(),
    g = (function() {
      function e() {}
      return (
        (e.decorators = [
          {
            type: u.NgModule,
            args: [
              {
                imports: [n.CommonModule],
                declarations: [l, d, f, h],
                exports: [l, d, f, h]
              }
            ]
          }
        ]),
        e
      );
    })(),
    y = (function() {
      function e() {}
      return (
        (e.prototype.ngOnInit = function() {
          this.node = this.context.row.node;
        }),
        (e.prototype.writeLockedBy = function() {
          return (
            this.node &&
            this.node.entry.properties &&
            this.node.entry.properties['cm:lockOwner'] &&
            this.node.entry.properties['cm:lockOwner'].displayName
          );
        }),
        (e.decorators = [
          {
            type: u.Component,
            args: [
              {
                selector: 'aca-locked-by',
                template:
                  '\n    <mat-icon class="locked_by--icon">lock</mat-icon>\n    <span class="locked_by--name">{{ writeLockedBy() }}</span>\n  ',
                changeDetection: u.ChangeDetectionStrategy.OnPush,
                encapsulation: u.ViewEncapsulation.None,
                host: { class: 'aca-locked-by' },
                styles: [
                  '.aca-locked-by{display:flex;align-items:center;padding:0 10px;color:var(--theme-text-color,rgba(0,0,0,.54))}.aca-locked-by .locked_by--icon{font-size:14px;width:14px;height:14px}.aca-locked-by .locked_by--name{font-size:12px;padding:0 2px}'
                ]
              }
            ]
          }
        ]),
        (e.ctorParameters = function() {
          return [];
        }),
        (e.propDecorators = { context: [{ type: u.Input }] }),
        e
      );
    })(),
    m = (function() {
      function e() {}
      return (
        (e.decorators = [
          {
            type: u.NgModule,
            args: [
              {
                imports: [n.CommonModule, r.MatIconModule],
                declarations: [y],
                exports: [y]
              }
            ]
          }
        ]),
        e
      );
    })(),
    v = function() {
      return (v =
        Object.assign ||
        function(e) {
          for (var t, o = 1, r = arguments.length; o < r; o++)
            for (var n in (t = arguments[o]))
              Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
          return e;
        }).apply(this, arguments);
    };
  function b(e, t) {
    var o = 'function' == typeof Symbol && e[Symbol.iterator];
    if (!o) return e;
    var r,
      n,
      a = o.call(e),
      i = [];
    try {
      for (; (void 0 === t || 0 < t--) && !(r = a.next()).done; )
        i.push(r.value);
    } catch (c) {
      n = { error: c };
    } finally {
      try {
        r && !r.done && (o = a['return']) && o.call(a);
      } finally {
        if (n) throw n.error;
      }
    }
    return i;
  }
  var x = (function() {
      function e() {
        this.routeCache = new Map();
      }
      return (
        (e.prototype.resetCache = function() {
          var t = this;
          this.routeCache.forEach(function(e) {
            t.deactivateComponent(e.handle);
          }),
            this.routeCache.clear();
        }),
        (e.prototype.deactivateComponent = function(e) {
          if (e) {
            var t = e.componentRef;
            t && t.destroy();
          }
        }),
        (e.prototype.shouldReuseRoute = function(e, t) {
          var o = e.routeConfig === t.routeConfig;
          return o && this.addRedirectsRecursively(e), o;
        }),
        (e.prototype.shouldDetach = function(e) {
          var t = this.getRouteData(e);
          return t && t.reuse;
        }),
        (e.prototype.store = function(e, t) {
          var o = this.getFullRouteUrl(e),
            r = this.getRouteData(e);
          this.routeCache.set(o, { handle: t, data: r }),
            this.addRedirectsRecursively(e);
        }),
        (e.prototype.shouldAttach = function(e) {
          var t = this.getFullRouteUrl(e);
          return this.routeCache.has(t);
        }),
        (e.prototype.retrieve = function(e) {
          var t = this.getFullRouteUrl(e),
            o = this.getRouteData(e);
          return o && o.reuse && this.routeCache.has(t)
            ? this.routeCache.get(t).handle
            : null;
        }),
        (e.prototype.addRedirectsRecursively = function(e) {
          var t = this,
            o = e.routeConfig;
          if (o) {
            if (!o.loadChildren) {
              var r = e.firstChild,
                n = r ? this.getRouteUrlPaths(r).join('/') : '',
                a = o.children;
              if (a) {
                var i = a.find(function(e) {
                  return '' === e.path && !!e.redirectTo;
                });
                i && (i.redirectTo = n);
              }
            }
            e.children.forEach(function(e) {
              return t.addRedirectsRecursively(e);
            });
          }
        }),
        (e.prototype.getFullRouteUrl = function(e) {
          return this.getFullRouteUrlPaths(e)
            .filter(Boolean)
            .join('/');
        }),
        (e.prototype.getFullRouteUrlPaths = function(e) {
          var t = this.getRouteUrlPaths(e);
          return e.parent
            ? (function o() {
                for (var e = [], t = 0; t < arguments.length; t++)
                  e = e.concat(b(arguments[t]));
                return e;
              })(this.getFullRouteUrlPaths(e.parent), t)
            : t;
        }),
        (e.prototype.getRouteUrlPaths = function(e) {
          return e.url.map(function(e) {
            return e.path;
          });
        }),
        (e.prototype.getRouteData = function(e) {
          return e.routeConfig && e.routeConfig.data;
        }),
        e
      );
    })(),
    C = (function() {
      function e(e) {
        this.isQuickShareEnabled$ = e.select(p.isQuickShareEnabled);
      }
      return (
        (e.prototype.canActivate = function(e) {
          return this.isQuickShareEnabled$;
        }),
        (e.prototype.canActivateChild = function(e) {
          return this.canActivate(e);
        }),
        (e.decorators = [
          { type: u.Injectable, args: [{ providedIn: 'root' }] }
        ]),
        (e.ctorParameters = function() {
          return [{ type: s.Store }];
        }),
        (e.ngInjectableDef = u.defineInjectable({
          factory: function() {
            return new e(u.inject(s.Store));
          },
          token: e,
          providedIn: 'root'
        })),
        e
      );
    })(),
    A = (function() {
      function e(e, t, o) {
        var r = this;
        (this.config = t),
          (this.ready = new c.BehaviorSubject(
            e.isLoggedIn() || this.withCredentials
          )),
          (this.ready$ = this.ready.asObservable()),
          e.onLogin.subscribe(function() {
            o.resetCache(), r.ready.next(!0);
          }),
          e.onLogout.subscribe(function() {
            o.resetCache();
          });
      }
      return (
        Object.defineProperty(e.prototype, 'withCredentials', {
          get: function() {
            return this.config.get('auth.withCredentials', !1);
          },
          enumerable: !0,
          configurable: !0
        }),
        (e.decorators = [
          { type: u.Injectable, args: [{ providedIn: 'root' }] }
        ]),
        (e.ctorParameters = function() {
          return [
            { type: o.AuthenticationService },
            { type: o.AppConfigService },
            {
              type: x,
              decorators: [{ type: u.Inject, args: [t.RouteReuseStrategy] }]
            }
          ];
        }),
        (e.ngInjectableDef = u.defineInjectable({
          factory: function() {
            return new e(
              u.inject(o.AuthenticationService),
              u.inject(o.AppConfigService),
              u.inject(t.RouteReuseStrategy)
            );
          },
          token: e,
          providedIn: 'root'
        })),
        e
      );
    })(),
    S = (function() {
      function e(e, t) {
        (this.api = e), (this.preferences = t);
      }
      return (
        (e.prototype.deleteNode = function(e, t) {
          return (
            void 0 === t && (t = {}), c.from(this.api.nodesApi.deleteNode(e, t))
          );
        }),
        (e.prototype.getNode = function(e, t) {
          void 0 === t && (t = {});
          var o = Object.assign(
            {
              include: [
                'path',
                'properties',
                'allowableOperations',
                'permissions'
              ]
            },
            t
          );
          return c.from(this.api.nodesApi.getNode(e, o));
        }),
        (e.prototype.getNodeInfo = function(e, t) {
          var o = Object.assign(
            { include: ['isFavorite', 'allowableOperations', 'path'] },
            t || {}
          );
          return c.from(this.api.nodesApi.getNodeInfo(e, o));
        }),
        (e.prototype.getNodeChildren = function(e, t) {
          void 0 === t && (t = {});
          var o = {
              maxItems: this.preferences.paginationSize,
              skipCount: 0,
              include: [
                'isLocked',
                'path',
                'properties',
                'allowableOperations',
                'permissions'
              ]
            },
            r = Object.assign(o, t);
          return c.from(this.api.nodesApi.getNodeChildren(e, r));
        }),
        (e.prototype.deleteSharedLink = function(e) {
          return c.from(this.api.sharedLinksApi.deleteSharedLink(e));
        }),
        (e.prototype.getDeletedNodes = function(e) {
          void 0 === e && (e = {});
          var t = Object.assign({ include: ['path'] }, e);
          return c.from(this.api.nodesApi.getDeletedNodes(t));
        }),
        (e.prototype.restoreNode = function(e) {
          return c.from(this.api.nodesApi.restoreNode(e));
        }),
        (e.prototype.purgeDeletedNode = function(e) {
          return c.from(this.api.nodesApi.purgeDeletedNode(e));
        }),
        (e.prototype.getPerson = function(e, t) {
          return c.from(this.api.peopleApi.getPerson(e, t));
        }),
        (e.prototype.copyNode = function(e, t, o, r) {
          return c.from(
            this.api.nodesApi.copyNode(e, { targetParentId: t, name: o }, r)
          );
        }),
        (e.prototype.getRepositoryInformation = function() {
          return c.from(
            this.api
              .getInstance()
              .discovery.discoveryApi.getRepositoryInformation()
          );
        }),
        (e.prototype.getFavorites = function(e, t) {
          return c.from(this.api.favoritesApi.getFavorites(e, t));
        }),
        (e.prototype.getFavoriteLibraries = function(e, t) {
          return (
            void 0 === e && (e = '-me-'),
            this.getFavorites(
              e,
              v({}, t, { where: '(EXISTS(target/site))' })
            ).pipe(
              i.map(function(e) {
                return {
                  list: {
                    entries: e.list.entries.map(function(e) {
                      var t = e.entry;
                      return (
                        (t.target.site.createdAt = t.createdAt),
                        { entry: t.target.site }
                      );
                    }),
                    pagination: e.list.pagination
                  }
                };
              })
            )
          );
        }),
        (e.prototype.findSharedLinks = function(e) {
          return c.from(this.api.sharedLinksApi.findSharedLinks(e));
        }),
        (e.prototype.getSharedLinkContent = function(e, t) {
          return this.api.contentApi.getSharedLinkContentUrl(e, t);
        }),
        (e.prototype.search = function(e) {
          return c.from(this.api.searchApi.search(e));
        }),
        (e.prototype.getContentUrl = function(e, t) {
          return this.api.contentApi.getContentUrl(e, t);
        }),
        (e.prototype.deleteSite = function(e, t) {
          return c.from(this.api.sitesApi.deleteSite(e, t));
        }),
        (e.prototype.leaveSite = function(e) {
          return c.from(this.api.sitesApi.removeSiteMember(e, '-me-'));
        }),
        (e.prototype.createSite = function(e, t) {
          return c.from(this.api.sitesApi.createSite(e, t));
        }),
        (e.prototype.getSite = function(e, t) {
          return c.from(this.api.sitesApi.getSite(e, t));
        }),
        (e.prototype.updateLibrary = function(e, t) {
          return c.from(this.api.sitesApi.updateSite(e, t));
        }),
        (e.prototype.addFavorite = function(e) {
          var t = e.map(function(e) {
            var t,
              o = e.entry,
              r = o.isFolder,
              n = o.nodeId,
              a = o.id,
              i = e.entry.guid,
              c = i || n || a;
            return {
              target: ((t = {}),
              (t[i ? 'site' : r ? 'folder' : 'file'] = { guid: c }),
              t)
            };
          });
          return c.from(this.api.favoritesApi.addFavorite('-me-', t));
        }),
        (e.prototype.removeFavorite = function(e) {
          var o = this;
          return c.from(
            Promise.all(
              e.map(function(e) {
                var t = e.entry.nodeId || e.entry.id;
                return o.api.favoritesApi.removeFavoriteSite('-me-', t);
              })
            )
          );
        }),
        (e.prototype.unlockNode = function(e, t) {
          return this.api.nodesApi.unlockNode(e, t);
        }),
        (e.decorators = [
          { type: u.Injectable, args: [{ providedIn: 'root' }] }
        ]),
        (e.ctorParameters = function() {
          return [
            { type: o.AlfrescoApiService },
            { type: o.UserPreferencesService }
          ];
        }),
        (e.ngInjectableDef = u.defineInjectable({
          factory: function() {
            return new e(
              u.inject(o.AlfrescoApiService),
              u.inject(o.UserPreferencesService)
            );
          },
          token: e,
          providedIn: 'root'
        })),
        e
      );
    })(),
    w = (function() {
      function n() {
        this.defaultOptions = { operation: n.DEFAULT_OPERATION, target: null };
      }
      return (
        (n.prototype.check = function(e, t, o) {
          var r = this,
            n = Object.assign({}, this.defaultOptions, o || {});
          return (
            !!e &&
            (Array.isArray(e)
              ? 0 <
                  (e = e.filter(function(e) {
                    return e;
                  })).length &&
                e.every(function(e) {
                  return r.isOperationAllowed(e, t, n);
                })
              : this.isOperationAllowed(e, t, n))
          );
        }),
        (n.prototype.isOperationAllowed = function(e, t, o) {
          var r = this.getAllowableOperations(e, o.target);
          return (
            !!r.length &&
            (o.operation === n.DEFAULT_OPERATION
              ? t.some(function(e) {
                  return r.includes(e);
                })
              : t.every(function(e) {
                  return r.includes(e);
                }))
          );
        }),
        (n.prototype.getAllowableOperations = function(e, t) {
          var o;
          return (
            (o = 'entry' in e ? e.entry : e),
            t
              ? o[t] || []
              : 'allowableOperationsOnTarget' in o
              ? o.allowableOperationsOnTarget || []
              : o.allowableOperations || []
          );
        }),
        (n.DEFAULT_OPERATION = 'OR'),
        (n.decorators = [
          { type: u.Injectable, args: [{ providedIn: 'root' }] }
        ]),
        (n.ngInjectableDef = u.defineInjectable({
          factory: function() {
            return new n();
          },
          token: n,
          providedIn: 'root'
        })),
        n
      );
    })(),
    I = (function() {
      function e() {
        this.text = 'APP.MESSAGES.ERRORS.MISSING_CONTENT';
      }
      return (
        (e.decorators = [
          {
            type: u.Component,
            args: [
              {
                selector: 'aca-generic-error',
                template:
                  '<mat-icon>error</mat-icon>\n<p class="generic-error__title">\n  {{ text | translate }}\n</p>\n',
                encapsulation: u.ViewEncapsulation.None,
                changeDetection: u.ChangeDetectionStrategy.OnPush,
                host: { class: 'aca-generic-error' },
                styles: [
                  '.aca-generic-error{color:var(--theme-text-color,rgba(0,0,0,.54));display:flex;align-items:center;justify-content:center;flex-direction:column;width:100%;height:100%}.aca-generic-error__title{font-size:16px}.aca-generic-error mat-icon{color:var(--theme-warn-color,#f44336);font-size:52px;height:52px;width:52px}'
                ]
              }
            ]
          }
        ]),
        (e.propDecorators = { text: [{ type: u.Input }] }),
        e
      );
    })(),
    O = (function() {
      function e() {}
      return (
        (e.decorators = [
          {
            type: u.NgModule,
            args: [
              {
                imports: [
                  n.CommonModule,
                  r.MatIconModule,
                  a.TranslateModule.forChild()
                ],
                declarations: [I],
                exports: [I]
              }
            ]
          }
        ]),
        e
      );
    })(),
    k = (function() {
      function e(e) {
        (this.store = e),
          (this.execute$ = new c.Subject()),
          (this.onDestroy$ = new c.Subject()),
          (this.enabled = !0);
      }
      return (
        (e.prototype.onContextMenuEvent = function(e) {
          if (e && (e.preventDefault(), this.enabled)) {
            var t = this.getTarget(e);
            t && this.execute(e, t);
          }
        }),
        (e.prototype.ngOnInit = function() {
          var t = this;
          this.execute$
            .pipe(
              i.debounceTime(300),
              i.takeUntil(this.onDestroy$)
            )
            .subscribe(function(e) {
              t.store.dispatch(new p.ContextMenu(e));
            });
        }),
        (e.prototype.ngOnDestroy = function() {
          this.onDestroy$.next(!0), this.onDestroy$.complete();
        }),
        (e.prototype.execute = function(e, t) {
          this.isSelected(t) || t.dispatchEvent(new MouseEvent('click')),
            this.execute$.next(e);
        }),
        (e.prototype.getTarget = function(e) {
          return this.findAncestor(e.target, 'adf-datatable-cell');
        }),
        (e.prototype.isSelected = function(e) {
          return (
            !!e &&
            this.findAncestor(e, 'adf-datatable-row').classList.contains(
              'adf-is-selected'
            )
          );
        }),
        (e.prototype.findAncestor = function(e, t) {
          if (e.classList.contains(t)) return e;
          for (; (e = e.parentElement) && !e.classList.contains(t); );
          return e;
        }),
        (e.decorators = [
          {
            type: u.Directive,
            args: [
              { selector: '[acaContextActions]', exportAs: 'acaContextActions' }
            ]
          }
        ]),
        (e.ctorParameters = function() {
          return [{ type: s.Store }];
        }),
        (e.propDecorators = {
          enabled: [{ type: u.Input, args: ['acaContextEnable'] }],
          onContextMenuEvent: [
            { type: u.HostListener, args: ['contextmenu', ['$event']] }
          ]
        }),
        e
      );
    })(),
    R = (function() {
      function e() {}
      return (
        (e.decorators = [
          { type: u.NgModule, args: [{ declarations: [k], exports: [k] }] }
        ]),
        e
      );
    })();
  var D = (function() {
    function e() {}
    return (
      (e.forRoot = function() {
        return { ngModule: e, providers: [S, w, A] };
      }),
      (e.decorators = [
        { type: u.NgModule, args: [{ imports: [R], exports: [R] }] }
      ]),
      e
    );
  })();
  (e.PageLayoutContentComponent = l),
    (e.PageLayoutErrorComponent = d),
    (e.PageLayoutHeaderComponent = f),
    (e.PageLayoutComponent = h),
    (e.PageLayoutModule = g),
    (e.LockedByComponent = y),
    (e.LockedByModule = m),
    (e.AppRouteReuseStrategy = x),
    (e.AppSharedRuleGuard = C),
    (e.AppService = A),
    (e.ContentApiService = S),
    (e.NodePermissionService = w),
    (e.GenericErrorComponent = I),
    (e.GenericErrorModule = O),
    (e.ContextActionsDirective = k),
    (e.ContextActionsModule = R),
    (e.isLocked =
      /*!
       * @license
       * Alfresco Example Content Application
       *
       * Copyright (C) 2005 - 2020 Alfresco Software Limited
       *
       * This file is part of the Alfresco Example Content Application.
       * If the software was purchased under a paid Alfresco license, the terms of
       * the paid license agreement will prevail.  Otherwise, the software is
       * provided under the following open source license terms:
       *
       * The Alfresco Example Content Application is free software: you can redistribute it and/or modify
       * it under the terms of the GNU Lesser General Public License as published by
       * the Free Software Foundation, either version 3 of the License, or
       * (at your option) any later version.
       *
       * The Alfresco Example Content Application is distributed in the hope that it will be useful,
       * but WITHOUT ANY WARRANTY; without even the implied warranty of
       * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
       * GNU Lesser General Public License for more details.
       *
       * You should have received a copy of the GNU Lesser General Public License
       * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.
       */
      function j(e) {
        var t = e.entry;
        return (
          (t && t.isLocked) ||
          (t.properties &&
            ('READ_ONLY_LOCK' === t.properties['cm:lockType'] ||
              'WRITE_LOCK' === t.properties['cm:lockType']))
        );
      }),
    (e.isLibrary = function N(e) {
      var t = e.entry;
      return (
        (t.guid && t.id && t.preset && t.title && t.visibility) ||
        'st:site' === t.nodeType
      );
    }),
    (e.SharedModule = D),
    Object.defineProperty(e, '__esModule', { value: !0 });
});
//# sourceMappingURL=alfresco-aca-shared.umd.min.js.map
