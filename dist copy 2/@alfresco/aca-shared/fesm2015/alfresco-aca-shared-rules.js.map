{"version":3,"file":"alfresco-aca-shared-rules.js.map","sources":["ng://@alfresco/aca-shared/rules/navigation.rules.ts","ng://@alfresco/aca-shared/rules/repository.rules.ts","ng://@alfresco/aca-shared/rules/app.rules.ts","ng://@alfresco/aca-shared/rules/user.rules.ts"],"sourcesContent":["/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { RuleContext } from '@alfresco/adf-extensions';\n\n/**\n * Checks if a Preview route is activated.\n * JSON ref: `app.navigation.isPreview`\n */\nexport function isPreview(context: RuleContext): boolean {\n  const { url } = context.navigation;\n  return (\n    url &&\n    (url.includes('/preview/') ||\n      url.includes('viewer:view') ||\n      url.includes('/view/'))\n  );\n}\n\n/**\n * Checks if a **Favorites** route is activated.\n * JSON ref: `app.navigation.isFavorites`\n */\nexport function isFavorites(context: RuleContext): boolean {\n  const { url } = context.navigation;\n  return url && url.startsWith('/favorites') && !isPreview(context);\n}\n\n/**\n * Checks if the activated route is not **Favorites**.\n * JSON ref: `app.navigation.isNotFavorites`\n */\nexport function isNotFavorites(context: RuleContext): boolean {\n  return !isFavorites(context);\n}\n\n/**\n * Checks if a **Shared Files** route is activated.\n * JSON ref: `app.navigation.isSharedFiles`\n */\nexport function isSharedFiles(context: RuleContext): boolean {\n  const { url } = context.navigation;\n  return url && url.startsWith('/shared') && !isPreview(context);\n}\n\n/**\n * Checks if the activated route is not **Shared Files**.\n * JSON ref: `app.navigation.isNotSharedFiles`\n */\nexport function isNotSharedFiles(context: RuleContext): boolean {\n  return !isSharedFiles(context);\n}\n\n/**\n * Checks if a **Trashcan** route is activated.\n * JSON ref: `app.navigation.isTrashcan`\n */\nexport function isTrashcan(context: RuleContext): boolean {\n  const { url } = context.navigation;\n  return url && url.startsWith('/trashcan');\n}\n\n/**\n * Checks if the activated route is not **Trashcan**.\n * JSON ref: `app.navigation.isNotTrashcan`\n */\nexport function isNotTrashcan(context: RuleContext): boolean {\n  return !isTrashcan(context);\n}\n\n/**\n * Checks if a **Personal Files** route is activated.\n * JSON ref: `app.navigation.isPersonalFiles`\n */\nexport function isPersonalFiles(context: RuleContext): boolean {\n  const { url } = context.navigation;\n  return url && url.startsWith('/personal-files');\n}\n\n/**\n * Checks if a **Library Files** route is activated.\n * JSON ref: `app.navigation.isLibraryFiles`\n */\nexport function isLibraryFiles(context: RuleContext): boolean {\n  const { url } = context.navigation;\n  return url && url.startsWith('/libraries');\n}\n\n/**\n * Checks if a **Library Files** or **Library Search Result** route is activated.\n * JSON ref: `app.navigation.isLibraryFiles`\n */\nexport function isLibraries(context: RuleContext): boolean {\n  const { url } = context.navigation;\n  return (\n    url && (url.endsWith('/libraries') || url.startsWith('/search-libraries'))\n  );\n}\n\n/**\n * Checks if the activated route is neither **Libraries** nor **Library Search Results**.\n * JSON ref: `app.navigation.isNotLibraries`\n */\nexport function isNotLibraries(context: RuleContext): boolean {\n  return !isLibraries(context);\n}\n\n/**\n * Checks if a **Recent Files** route is activated.\n * JSON ref: `app.navigation.isRecentFiles`\n */\nexport function isRecentFiles(context: RuleContext): boolean {\n  const { url } = context.navigation;\n  return url && url.startsWith('/recent-files');\n}\n\n/**\n * Checks if the activated route is not **Recent Files**.\n * JSON ref: `app.navigation.isNotRecentFiles`\n */\nexport function isNotRecentFiles(context: RuleContext): boolean {\n  return !isRecentFiles(context);\n}\n\n/**\n * Checks if a **Search Results** route is activated.\n * JSON ref: `app.navigation.isSearchResults`\n */\nexport function isSearchResults(\n  context: RuleContext /*,\n  ...args: RuleParameter[]*/\n): boolean {\n  const { url } = context.navigation;\n  return url && url.startsWith('/search');\n}\n\n/**\n * Checks if the activated route is not **Search Results**.\n * JSON ref: `app.navigation.isNotSearchResults`\n */\nexport function isNotSearchResults(context: RuleContext): boolean {\n  return !isSearchResults(context);\n}\n\n/**\n * Checks if a **Shared Preview** route is activated.\n * JSON ref: `app.navigation.isSharedPreview`\n */\nexport function isSharedPreview(context: RuleContext): boolean {\n  const { url } = context.navigation;\n  return (\n    url &&\n    (url.startsWith('/shared/preview/') ||\n      (url.startsWith('/shared') && url.includes('viewer:view')))\n  );\n}\n\n/**\n * Checks if a **Favorites Preview** route is activated.\n * JSON ref: `app.navigation.isFavoritesPreview`\n */\nexport function isFavoritesPreview(context: RuleContext): boolean {\n  const { url } = context.navigation;\n  return (\n    url &&\n    (url.startsWith('/favorites/preview/') ||\n      (url.startsWith('/favorites') && url.includes('viewer:view')))\n  );\n}\n\n/**\n * Checks if a **Shared File Preview** route is activated.\n * JSON ref: `app.navigation.isFavoritesPreview`\n */\nexport function isSharedFileViewer(context: RuleContext): boolean {\n  const { url } = context.navigation;\n  return url && url.startsWith('/preview/s/');\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { RuleContext } from '@alfresco/adf-extensions';\n\n/**\n * Checks if the quick share repository option is enabled or not.\n * JSON ref: `repository.isQuickShareEnabled`\n */\nexport function hasQuickShareEnabled(context: RuleContext): boolean {\n  return context.repository.status.isQuickShareEnabled;\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { RuleContext } from '@alfresco/adf-extensions';\nimport * as navigation from './navigation.rules';\nimport * as repository from './repository.rules';\n\nexport interface AcaRuleContext extends RuleContext {\n  languagePicker: boolean;\n  withCredentials: boolean;\n  processServices: boolean;\n}\n\n/**\n * Checks if user can copy selected node.\n * JSON ref: `app.canCopyNode`\n * @param context Rule execution context\n */\nexport function canCopyNode(context: RuleContext): boolean {\n  return [\n    hasSelection(context),\n    navigation.isNotTrashcan(context),\n    navigation.isNotLibraries(context)\n  ].every(Boolean);\n}\n\n/**\n * Checks if user can mark selected nodes as **Favorite**.\n * JSON ref: `app.selection.canAddFavorite`\n */\nexport function canAddFavorite(context: RuleContext): boolean {\n  if (!context.selection.isEmpty) {\n    if (\n      navigation.isFavorites(context) ||\n      navigation.isLibraries(context) ||\n      navigation.isTrashcan(context)\n    ) {\n      return false;\n    }\n    return context.selection.nodes.some(node => !node.entry.isFavorite);\n  }\n  return false;\n}\n\n/**\n * Checks if user can un-mark selected nodes as **Favorite**.\n * JSON ref: `app.selection.canRemoveFavorite`\n */\nexport function canRemoveFavorite(context: RuleContext): boolean {\n  if (!context.selection.isEmpty && !navigation.isTrashcan(context)) {\n    if (navigation.isFavorites(context)) {\n      return true;\n    }\n    return context.selection.nodes.every(node => node.entry.isFavorite);\n  }\n  return false;\n}\n\n/**\n * Checks if user can share selected file.\n * JSON ref: `app.selection.file.canShare`\n */\nexport function canShareFile(context: RuleContext): boolean {\n  return [\n    context.selection.file,\n    navigation.isNotTrashcan(context),\n    repository.hasQuickShareEnabled(context),\n    !isShared(context)\n  ].every(Boolean);\n}\n\n/**\n * Checks if user can perform \"Join\" or \"Cancel Join Request\" on a library.\n * JSON ref: `canToggleJoinLibrary`\n */\nexport function canToggleJoinLibrary(context: RuleContext): boolean {\n  return [\n    hasLibrarySelected(context),\n    !isPrivateLibrary(context),\n    hasNoLibraryRole(context)\n  ].every(Boolean);\n}\n\n/**\n * Checks if user can edit the selected folder.\n * JSON ref: `canEditFolder`\n * @param context Rule execution context\n */\nexport function canEditFolder(context: RuleContext): boolean {\n  return [\n    canUpdateSelectedFolder(context),\n    navigation.isNotTrashcan(context)\n  ].every(Boolean);\n}\n\n/**\n * Checks if the selected file is already shared.\n * JSON ref: `app.selection.file.isShared`\n */\nexport function isShared(context: RuleContext): boolean {\n  if (navigation.isSharedFiles(context) && context.selection.file) {\n    return true;\n  }\n\n  if (\n    (navigation.isNotTrashcan(context),\n    !context.selection.isEmpty && context.selection.file)\n  ) {\n    return !!(\n      context.selection.file.entry &&\n      context.selection.file.entry.properties &&\n      context.selection.file.entry.properties['qshare:sharedId']\n    );\n  }\n\n  return false;\n}\n\n/**\n * Checks if user can delete selected nodes.\n * JSON ref: `app.selection.canDelete`\n */\nexport function canDeleteSelection(context: RuleContext): boolean {\n  if (\n    navigation.isNotTrashcan(context) &&\n    navigation.isNotLibraries(context) &&\n    navigation.isNotSearchResults(context) &&\n    !context.selection.isEmpty\n  ) {\n    if (hasLockedFiles(context)) {\n      return false;\n    }\n\n    // temp workaround for Favorites api\n    if (navigation.isFavorites(context)) {\n      return true;\n    }\n\n    if (navigation.isPreview(context)) {\n      return context.permissions.check(context.selection.nodes, ['delete']);\n    }\n\n    // workaround for Shared Files\n    if (navigation.isSharedFiles(context)) {\n      return context.permissions.check(context.selection.nodes, ['delete'], {\n        target: 'allowableOperationsOnTarget'\n      });\n    }\n\n    return context.permissions.check(context.selection.nodes, ['delete']);\n  }\n  return false;\n}\n\n/**\n * Checks if user can un-share selected nodes.\n * JSON ref: `app.selection.canUnshare`\n */\nexport function canUnshareNodes(context: RuleContext): boolean {\n  if (!context.selection.isEmpty) {\n    return context.permissions.check(context.selection.nodes, ['delete'], {\n      target: 'allowableOperationsOnTarget'\n    });\n  }\n  return false;\n}\n\n/**\n * Checks if user selected anything.\n * JSON ref: `app.selection.notEmpty`\n */\nexport function hasSelection(context: RuleContext): boolean {\n  return !context.selection.isEmpty;\n}\n\n/**\n * Checks if user can create a new folder with current path.\n * JSON ref: `app.navigation.folder.canCreate`\n */\nexport function canCreateFolder(context: RuleContext): boolean {\n  const { currentFolder } = context.navigation;\n  if (currentFolder) {\n    return context.permissions.check(currentFolder, ['create']);\n  }\n  return false;\n}\n\n/**\n * Checks if user can upload content to current folder.\n * JSON ref: `app.navigation.folder.canUpload`\n */\nexport function canUpload(context: RuleContext): boolean {\n  const { currentFolder } = context.navigation;\n  if (currentFolder) {\n    return context.permissions.check(currentFolder, ['create']);\n  }\n  return false;\n}\n\n/**\n * Checks if user can download selected nodes (either files or folders).\n * JSON ref: `app.selection.canDownload`\n */\nexport function canDownloadSelection(context: RuleContext): boolean {\n  if (!context.selection.isEmpty && navigation.isNotTrashcan(context)) {\n    return context.selection.nodes.every((node: any) => {\n      return (\n        node.entry &&\n        (node.entry.isFile || node.entry.isFolder || !!node.entry.nodeId)\n      );\n    });\n  }\n  return false;\n}\n\n/**\n * Checks if user has selected a folder.\n * JSON ref: `app.selection.folder`\n */\nexport function hasFolderSelected(context: RuleContext): boolean {\n  const folder = context.selection.folder;\n  return folder ? true : false;\n}\n\n/**\n * Checks if user has selected a library (site).\n * JSON ref: `app.selection.library`\n */\nexport function hasLibrarySelected(context: RuleContext): boolean {\n  const library = context.selection.library;\n  return library ? true : false;\n}\n\n/**\n * Checks if user has selected a **private** library (site)\n * JSON ref: `app.selection.isPrivateLibrary`\n */\nexport function isPrivateLibrary(context: RuleContext): boolean {\n  const library = context.selection.library;\n  return library\n    ? !!(\n        library.entry &&\n        library.entry.visibility &&\n        library.entry.visibility === 'PRIVATE'\n      )\n    : false;\n}\n\n/**\n * Checks if the selected library has a **role** property defined.\n * JSON ref: `app.selection.hasLibraryRole`\n */\nexport function hasLibraryRole(context: RuleContext): boolean {\n  const library = context.selection.library;\n  return library ? !!(library.entry && library.entry.role) : false;\n}\n\n/**\n * Checks if the selected library has no **role** property defined.\n * JSON ref: `app.selection.hasNoLibraryRole`\n */\nexport function hasNoLibraryRole(context: RuleContext): boolean {\n  return !hasLibraryRole(context);\n}\n\n/**\n * Checks if user has selected a file.\n * JSON ref: `app.selection.file`\n */\nexport function hasFileSelected(context: RuleContext): boolean {\n  if (context && context.selection && context.selection.file) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Checks if user can update the first selected node.\n * JSON ref: `app.selection.first.canUpdate`\n */\nexport function canUpdateSelectedNode(context: RuleContext): boolean {\n  if (context.selection && !context.selection.isEmpty) {\n    const node = context.selection.first;\n\n    if (node.entry.isFile && hasLockedFiles(context)) {\n      return false;\n    }\n\n    return context.permissions.check(node, ['update']);\n  }\n  return false;\n}\n\n/**\n * Checks if user can update the first selected folder.\n * JSON ref: `app.selection.folder.canUpdate`\n */\nexport function canUpdateSelectedFolder(context: RuleContext): boolean {\n  const { folder } = context.selection;\n  if (folder) {\n    return (\n      // workaround for Favorites Api\n      navigation.isFavorites(context) ||\n      context.permissions.check(folder.entry, ['update'])\n    );\n  }\n  return false;\n}\n\n/**\n * Checks if user has selected a **locked** file node.\n * JSON ref: `app.selection.file.isLocked`\n */\nexport function hasLockedFiles(context: RuleContext): boolean {\n  if (context && context.selection && context.selection.nodes) {\n    return context.selection.nodes.some(node => {\n      if (!node.entry.isFile) {\n        return false;\n      }\n\n      return (\n        node.entry.isLocked ||\n        (node.entry.properties &&\n          node.entry.properties['cm:lockType'] === 'READ_ONLY_LOCK')\n      );\n    });\n  }\n\n  return false;\n}\n\n/**\n * Checks if the selected file has **write** or **read-only** locks specified.\n * JSON ref: `app.selection.file.isLocked`\n */\nexport function isWriteLocked(context: RuleContext): boolean {\n  return !!(\n    context &&\n    context.selection &&\n    context.selection.file &&\n    context.selection.file.entry &&\n    context.selection.file.entry.properties &&\n    (context.selection.file.entry.properties['cm:lockType'] === 'WRITE_LOCK' ||\n      context.selection.file.entry.properties['cm:lockType'] ===\n        'READ_ONLY_LOCK')\n  );\n}\n\n/**\n * Checks if the selected file has **write** or **read-only** locks specified,\n * and that current user is the owner of the lock.\n * JSON ref: `app.selection.file.isLockOwner`\n */\nexport function isUserWriteLockOwner(context: RuleContext): boolean {\n  return (\n    isWriteLocked(context) &&\n    (context.selection.file.entry.properties['cm:lockOwner'] &&\n      context.selection.file.entry.properties['cm:lockOwner'].id ===\n        context.profile.id)\n  );\n}\n\n/**\n * Checks if user can lock selected file.\n * JSON ref: `app.selection.file.canLock`\n */\nexport function canLockFile(context: RuleContext): boolean {\n  return !isWriteLocked(context) && canUpdateSelectedNode(context);\n}\n\n/**\n * Checks if user can unlock selected file.\n * JSON ref: `app.selection.file.canUnlock`\n */\nexport function canUnlockFile(context: RuleContext): boolean {\n  const { file } = context.selection;\n  return (\n    isWriteLocked(context) &&\n    (context.permissions.check(file.entry, ['delete']) ||\n      isUserWriteLockOwner(context))\n  );\n}\n\n/**\n * Checks if user can upload a new version of the file.\n * JSON ref: `app.selection.file.canUploadVersion`\n */\nexport function canUploadVersion(context: RuleContext): boolean {\n  if (navigation.isFavorites(context) || navigation.isSharedFiles(context)) {\n    return hasFileSelected(context);\n  }\n\n  return [\n    hasFileSelected(context),\n    navigation.isNotTrashcan(context),\n    isWriteLocked(context)\n      ? isUserWriteLockOwner(context)\n      : canUpdateSelectedNode(context)\n  ].every(Boolean);\n}\n\n/**\n * Checks if user has trashcan item selected.\n * JSON ref: `isTrashcanItemSelected`\n * @param context Rule execution context\n */\nexport function isTrashcanItemSelected(context: RuleContext): boolean {\n  return [navigation.isTrashcan(context), hasSelection(context)].every(Boolean);\n}\n\n/**\n * Checks if user can view the file.\n * JSON ref: `canViewFile`\n * @param context Rule execution context\n */\nexport function canViewFile(context: RuleContext): boolean {\n  return [hasFileSelected(context), navigation.isNotTrashcan(context)].every(\n    Boolean\n  );\n}\n\n/**\n * Checks if user can **Leave** selected library.\n * JSON ref: `canLeaveLibrary`\n * @param context Rule execution context\n */\nexport function canLeaveLibrary(context: RuleContext): boolean {\n  return [hasLibrarySelected(context), hasLibraryRole(context)].every(Boolean);\n}\n\n/**\n * Checks if user can toggle shared link mode.\n * JSON ref: `canToggleSharedLink`\n * @param context Rule execution context\n */\nexport function canToggleSharedLink(context: RuleContext): boolean {\n  return [\n    hasFileSelected(context),\n    [canShareFile(context), isShared(context)].some(Boolean)\n  ].every(Boolean);\n}\n\n/**\n * Checks if user can show **Info Drawer** for the selected node.\n * JSON ref: `canShowInfoDrawer`\n * @param context Rule execution context\n */\nexport function canShowInfoDrawer(context: RuleContext): boolean {\n  return [\n    hasSelection(context),\n    navigation.isNotLibraries(context),\n    navigation.isNotTrashcan(context)\n  ].every(Boolean);\n}\n\n/**\n * Checks if user can manage file versions for the selected node.\n * JSON ref: `canManageFileVersions`\n * @param context Rule execution context\n */\nexport function canManageFileVersions(context: RuleContext): boolean {\n  return [\n    hasFileSelected(context),\n    navigation.isNotTrashcan(context),\n    !hasLockedFiles(context)\n  ].every(Boolean);\n}\n\n/**\n * Checks if user can manage permissions for the selected node.\n * JSON ref: `canManagePermissions`\n * @param context Rule execution context\n */\nexport function canManagePermissions(context: RuleContext): boolean {\n  return [\n    canUpdateSelectedNode(context),\n    navigation.isNotTrashcan(context)\n  ].every(Boolean);\n}\n\n/**\n * Checks if user can toggle **Edit Offline** mode for selected node.\n * JSON ref: `canToggleEditOffline`\n * @param context Rule execution context\n */\nexport function canToggleEditOffline(context: RuleContext): boolean {\n  return [\n    hasFileSelected(context),\n    navigation.isNotTrashcan(context),\n    canLockFile(context) || canUnlockFile(context)\n  ].every(Boolean);\n}\n\n/**\n * @deprecated Uses workarounds for for recent files and search api issues.\n * Checks if user can toggle **Favorite** state for a node.\n * @param context Rule execution context\n */\nexport function canToggleFavorite(context: RuleContext): boolean {\n  return [\n    [canAddFavorite(context), canRemoveFavorite(context)].some(Boolean),\n    [\n      navigation.isRecentFiles(context),\n      navigation.isSharedFiles(context),\n      navigation.isSearchResults(context),\n      navigation.isFavorites(context)\n    ].some(Boolean)\n  ].every(Boolean);\n}\n\n/**\n * Checks if application should render language picker menu.\n * JSON ref: `canShowLanguagePicker`\n * @param context Rule execution context\n */\nexport function canShowLanguagePicker(context: AcaRuleContext): boolean {\n  return context.languagePicker;\n}\n\n/**\n * Checks if application should render logout option.\n * JSON ref: `canShowLogout`\n * @param context Rule execution context\n */\nexport function canShowLogout(context: AcaRuleContext): boolean {\n  return !context.withCredentials;\n}\n\n/**\n * Checks if application should render process services extension.\n * JSON ref: `canShowProcessServices`\n * @param context Rule execution context\n */\nexport function canShowProcessServices(context: AcaRuleContext): boolean {\n  return context.processServices;\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { RuleContext } from '@alfresco/adf-extensions';\n\n/**\n * Checks if user is admin.\n * JSON ref: `user.isAdmin`\n */\nexport function isAdmin(context: RuleContext): boolean {\n  return context.profile.isAdmin;\n}\n"],"names":["navigation.isNotTrashcan","navigation.isNotLibraries","navigation.isFavorites","navigation.isLibraries","navigation.isTrashcan","repository.hasQuickShareEnabled","navigation.isSharedFiles","navigation.isNotSearchResults","navigation.isPreview","navigation.isRecentFiles","navigation.isSearchResults"],"mappings":"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"}
