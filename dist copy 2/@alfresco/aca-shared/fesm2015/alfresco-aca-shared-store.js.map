{"version":3,"file":"alfresco-aca-shared-store.js.map","sources":["ng://@alfresco/aca-shared/store/actions/app.actions.ts","ng://@alfresco/aca-shared/store/actions/library.actions.ts","ng://@alfresco/aca-shared/store/actions/node.actions.ts","ng://@alfresco/aca-shared/store/actions/router.actions.ts","ng://@alfresco/aca-shared/store/actions/search.actions.ts","ng://@alfresco/aca-shared/store/actions/snackbar.actions.ts","ng://@alfresco/aca-shared/store/actions/upload.actions.ts","ng://@alfresco/aca-shared/store/actions/viewer.actions.ts","ng://@alfresco/aca-shared/store/actions/metadata-aspect.actions.ts","ng://@alfresco/aca-shared/store/actions/template.actions.ts","ng://@alfresco/aca-shared/store/actions/contextmenu.actions.ts","ng://@alfresco/aca-shared/store/effects/dialog.effects.ts","ng://@alfresco/aca-shared/store/effects/router.effects.ts","ng://@alfresco/aca-shared/store/effects/snackbar.effects.ts","ng://@alfresco/aca-shared/store/models/search-option.model.ts","ng://@alfresco/aca-shared/store/selectors/app.selectors.ts","ng://@alfresco/aca-shared/store/store.module.ts"],"sourcesContent":["/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { Node, Person, Group, RepositoryInfo } from '@alfresco/js-api';\nimport { AppState } from '../states/app.state';\n\nexport enum AppActionTypes {\n  SetInitialState = 'SET_INITIAL_STATE',\n  SetLanguagePicker = 'SET_LANGUAGE_PICKER',\n  SetCurrentFolder = 'SET_CURRENT_FOLDER',\n  SetCurrentUrl = 'SET_CURRENT_URL',\n  SetUserProfile = 'SET_USER_PROFILE',\n  SetRepositoryInfo = 'SET_REPOSITORY_INFO',\n  ToggleInfoDrawer = 'TOGGLE_INFO_DRAWER',\n  ToggleDocumentDisplayMode = 'TOGGLE_DOCUMENT_DISPLAY_MODE',\n  Logout = 'LOGOUT',\n  ReloadDocumentList = 'RELOAD_DOCUMENT_LIST',\n  ResetSelection = 'RESET_SELECTION',\n  SetInfoDrawerState = 'SET_INFO_DRAWER_STATE',\n  SetInfoDrawerMetadataAspect = 'SET_INFO_DRAWER_METADATA_ASPECT',\n  CloseModalDialogs = 'CLOSE_MODAL_DIALOGS',\n  ToggleProcessServices = 'TOGGLE_PROCESS_SERVICES'\n}\n\nexport class SetInitialStateAction implements Action {\n  readonly type = AppActionTypes.SetInitialState;\n\n  constructor(public payload: AppState) {}\n}\n\nexport class SetLanguagePickerAction implements Action {\n  readonly type = AppActionTypes.SetLanguagePicker;\n\n  constructor(public payload: boolean) {}\n}\n\nexport class SetCurrentFolderAction implements Action {\n  readonly type = AppActionTypes.SetCurrentFolder;\n\n  constructor(public payload: Node) {}\n}\n\nexport class SetCurrentUrlAction implements Action {\n  readonly type = AppActionTypes.SetCurrentUrl;\n\n  constructor(public payload: string) {}\n}\n\nexport class SetUserProfileAction implements Action {\n  readonly type = AppActionTypes.SetUserProfile;\n\n  constructor(public payload: { person: Person; groups: Group[] }) {}\n}\n\nexport class ToggleInfoDrawerAction implements Action {\n  readonly type = AppActionTypes.ToggleInfoDrawer;\n}\n\nexport class ToggleDocumentDisplayMode implements Action {\n  readonly type = AppActionTypes.ToggleDocumentDisplayMode;\n}\n\nexport class LogoutAction implements Action {\n  readonly type = AppActionTypes.Logout;\n}\n\nexport class ReloadDocumentListAction implements Action {\n  readonly type = AppActionTypes.ReloadDocumentList;\n\n  constructor(public payload?: any) {}\n}\n\nexport class ResetSelectionAction implements Action {\n  readonly type = AppActionTypes.ResetSelection;\n\n  constructor(public payload?: any) {}\n}\n\nexport class SetInfoDrawerStateAction implements Action {\n  readonly type = AppActionTypes.SetInfoDrawerState;\n\n  constructor(public payload: boolean) {}\n}\n\nexport class CloseModalDialogsAction implements Action {\n  readonly type = AppActionTypes.CloseModalDialogs;\n}\n\nexport class SetRepositoryInfoAction implements Action {\n  readonly type = AppActionTypes.SetRepositoryInfo;\n\n  constructor(public payload: RepositoryInfo) {}\n}\n\nexport class ToggleProcessServicesAction implements Action {\n  readonly type = AppActionTypes.ToggleProcessServices;\n\n  constructor(public payload: boolean) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { SiteBody } from '@alfresco/js-api';\n\nexport enum LibraryActionTypes {\n  Delete = 'DELETE_LIBRARY',\n  Create = 'CREATE_LIBRARY',\n  Navigate = 'NAVIGATE_LIBRARY',\n  Update = 'UPDATE_LIBRARY',\n  Leave = 'LEAVE_LIBRARY'\n}\n\nexport class DeleteLibraryAction implements Action {\n  readonly type = LibraryActionTypes.Delete;\n\n  constructor(public payload?: string) {}\n}\n\nexport class CreateLibraryAction implements Action {\n  readonly type = LibraryActionTypes.Create;\n}\n\nexport class NavigateLibraryAction implements Action {\n  readonly type = LibraryActionTypes.Navigate;\n\n  constructor(public payload?: string) {}\n}\n\nexport class UpdateLibraryAction implements Action {\n  readonly type = LibraryActionTypes.Update;\n\n  constructor(public payload?: SiteBody) {}\n}\n\nexport class LeaveLibraryAction implements Action {\n  readonly type = LibraryActionTypes.Leave;\n\n  constructor(public payload?: string) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { MinimalNodeEntity } from '@alfresco/js-api';\n\nexport enum NodeActionTypes {\n  SetSelection = 'SET_SELECTED_NODES',\n  Delete = 'DELETE_NODES',\n  UndoDelete = 'UNDO_DELETE_NODES',\n  RestoreDeleted = 'RESTORE_DELETED_NODES',\n  PurgeDeleted = 'PURGE_DELETED_NODES',\n  Download = 'DOWNLOAD_NODES',\n  CreateFolder = 'CREATE_FOLDER',\n  EditFolder = 'EDIT_FOLDER',\n  Share = 'SHARE_NODE',\n  Unshare = 'UNSHARE_NODES',\n  Copy = 'COPY_NODES',\n  Move = 'MOVE_NODES',\n  ManagePermissions = 'MANAGE_PERMISSIONS',\n  PrintFile = 'PRINT_FILE',\n  ManageVersions = 'MANAGE_VERSIONS',\n  EditOffline = 'EDIT_OFFLINE',\n  UnlockForWriting = 'UNLOCK_WRITE_LOCK',\n  AddFavorite = 'ADD_FAVORITE',\n  RemoveFavorite = 'REMOVE_FAVORITE'\n}\n\nexport class SetSelectedNodesAction implements Action {\n  readonly type = NodeActionTypes.SetSelection;\n\n  constructor(public payload: MinimalNodeEntity[] = []) {}\n}\n\nexport class DeleteNodesAction implements Action {\n  readonly type = NodeActionTypes.Delete;\n\n  constructor(public payload: MinimalNodeEntity[] = []) {}\n}\n\nexport class UndoDeleteNodesAction implements Action {\n  readonly type = NodeActionTypes.UndoDelete;\n\n  constructor(public payload: any[] = []) {}\n}\n\nexport class RestoreDeletedNodesAction implements Action {\n  readonly type = NodeActionTypes.RestoreDeleted;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class PurgeDeletedNodesAction implements Action {\n  readonly type = NodeActionTypes.PurgeDeleted;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class DownloadNodesAction implements Action {\n  readonly type = NodeActionTypes.Download;\n\n  constructor(public payload: MinimalNodeEntity[] = []) {}\n}\n\nexport class CreateFolderAction implements Action {\n  readonly type = NodeActionTypes.CreateFolder;\n\n  constructor(public payload: string) {}\n}\n\nexport class EditFolderAction implements Action {\n  readonly type = NodeActionTypes.EditFolder;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class ShareNodeAction implements Action {\n  readonly type = NodeActionTypes.Share;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class UnshareNodesAction implements Action {\n  readonly type = NodeActionTypes.Unshare;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class CopyNodesAction implements Action {\n  readonly type = NodeActionTypes.Copy;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class MoveNodesAction implements Action {\n  readonly type = NodeActionTypes.Move;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class ManagePermissionsAction implements Action {\n  readonly type = NodeActionTypes.ManagePermissions;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class PrintFileAction implements Action {\n  readonly type = NodeActionTypes.PrintFile;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class ManageVersionsAction implements Action {\n  readonly type = NodeActionTypes.ManageVersions;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class EditOfflineAction implements Action {\n  readonly type = NodeActionTypes.EditOffline;\n\n  constructor(public payload: any) {}\n}\n\nexport class UnlockWriteAction implements Action {\n  readonly type = NodeActionTypes.UnlockForWriting;\n\n  constructor(public payload: any) {}\n}\n\nexport class AddFavoriteAction implements Action {\n  readonly type = NodeActionTypes.AddFavorite;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n\nexport class RemoveFavoriteAction implements Action {\n  readonly type = NodeActionTypes.RemoveFavorite;\n\n  constructor(public payload: Array<MinimalNodeEntity>) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { MinimalNodeEntity } from '@alfresco/js-api';\n\nexport enum RouterActionTypes {\n  NavigateUrl = 'NAVIGATE_URL',\n  NavigateRoute = 'NAVIGATE_ROUTE',\n  NavigateFolder = 'NAVIGATE_FOLDER',\n  NavigateParentFolder = 'NAVIGATE_PARENT_FOLDER'\n}\n\nexport class NavigateUrlAction implements Action {\n  readonly type = RouterActionTypes.NavigateUrl;\n\n  constructor(public payload: string) {}\n}\n\nexport class NavigateRouteAction implements Action {\n  readonly type = RouterActionTypes.NavigateRoute;\n\n  constructor(public payload: any[]) {}\n}\n\nexport class NavigateToFolder implements Action {\n  readonly type = RouterActionTypes.NavigateFolder;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class NavigateToParentFolder implements Action {\n  readonly type = RouterActionTypes.NavigateParentFolder;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { SearchOptionModel } from '../models/search-option.model';\n\nexport enum SearchActionTypes {\n  SearchByTerm = 'SEARCH_BY_TERM',\n  ToggleFilter = 'TOGGLE_SEARCH_FILTER',\n  ShowFilter = 'SHOW_SEARCH_FILTER',\n  HideFilter = 'HIDE_SEARCH_FILTER'\n}\n\nexport class SearchByTermAction implements Action {\n  readonly type = SearchActionTypes.SearchByTerm;\n  constructor(\n    public payload: string,\n    public searchOptions?: SearchOptionModel[]\n  ) {}\n}\n\nexport class ToggleSearchFilterAction implements Action {\n  readonly type = SearchActionTypes.ToggleFilter;\n}\n\nexport class ShowSearchFilterAction implements Action {\n  readonly type = SearchActionTypes.ShowFilter;\n}\n\nexport class HideSearchFilterAction implements Action {\n  readonly type = SearchActionTypes.HideFilter;\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\n\nexport enum SnackbarActionTypes {\n  Info = 'SNACKBAR_INFO',\n  Warning = 'SNACKBAR_WARNING',\n  Error = 'SNACKBAR_ERROR'\n}\n\nexport interface SnackbarAction extends Action {\n  payload: string;\n  params?: Object;\n  userAction?: SnackbarUserAction;\n  duration: number;\n}\n\nexport class SnackbarUserAction {\n  constructor(public title: string, public action: Action) {}\n}\n\nexport class SnackbarInfoAction implements SnackbarAction {\n  readonly type = SnackbarActionTypes.Info;\n\n  userAction?: SnackbarUserAction;\n  duration = 4000;\n\n  constructor(public payload: string, public params?: Object) {}\n}\n\nexport class SnackbarWarningAction implements SnackbarAction {\n  readonly type = SnackbarActionTypes.Warning;\n\n  userAction?: SnackbarUserAction;\n  duration = 4000;\n\n  constructor(public payload: string, public params?: Object) {}\n}\n\nexport class SnackbarErrorAction implements SnackbarAction {\n  readonly type = SnackbarActionTypes.Error;\n\n  userAction?: SnackbarUserAction;\n  duration = 4000;\n\n  constructor(public payload: string, public params?: Object) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\n\nexport enum UploadActionTypes {\n  UploadFiles = 'UPLOAD_FILES',\n  UploadFolder = 'UPLOAD_FOLDER',\n  UploadFileVersion = 'UPLOAD_FILE_VERSION'\n}\n\nexport class UploadFilesAction implements Action {\n  readonly type = UploadActionTypes.UploadFiles;\n\n  constructor(public payload: any) {}\n}\n\nexport class UploadFolderAction implements Action {\n  readonly type = UploadActionTypes.UploadFolder;\n\n  constructor(public payload: any) {}\n}\n\nexport class UploadFileVersionAction implements Action {\n  readonly type = UploadActionTypes.UploadFileVersion;\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { MinimalNodeEntity } from '@alfresco/js-api';\n\nexport enum ViewerActionTypes {\n  ViewFile = 'VIEW_FILE',\n  ViewNode = 'VIEW_NODE',\n  FullScreen = 'FULLSCREEN_VIEWER',\n  ClosePreview = 'CLOSE_PREVIEW'\n}\n\nexport interface ViewNodeExtras {\n  location?: string;\n  path?: string;\n}\n\nexport class ViewFileAction implements Action {\n  readonly type = ViewerActionTypes.ViewFile;\n\n  constructor(public payload?: MinimalNodeEntity, public parentId?: string) {}\n}\n\nexport class ViewNodeAction implements Action {\n  readonly type = ViewerActionTypes.ViewNode;\n\n  constructor(public nodeId: string, public viewNodeExtras?: ViewNodeExtras) {}\n}\n\nexport class FullscreenViewerAction implements Action {\n  readonly type = ViewerActionTypes.FullScreen;\n\n  constructor(public payload: MinimalNodeEntity) {}\n}\n\nexport class ClosePreviewAction implements Action {\n  readonly type = ViewerActionTypes.ClosePreview;\n  constructor(public payload?: MinimalNodeEntity) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\n\nexport const SET_INFO_DRAWER_METADATA_ASPECT =\n  'SET_INFO_DRAWER_METADATA_ASPECT';\n\nexport class SetInfoDrawerMetadataAspectAction implements Action {\n  readonly type = SET_INFO_DRAWER_METADATA_ASPECT;\n  constructor(public payload: string) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\nimport { Node } from '@alfresco/js-api';\n\nexport enum TemplateActionTypes {\n  FileFromTemplate = 'FILE_FROM_TEMPLATE',\n  FolderFromTemplate = 'FOLDER_FROM_TEMPLATE',\n  CreateFromTemplate = 'CREATE_FROM_TEMPLATE',\n  CreateFromTemplateSuccess = 'CREATE_FROM_TEMPLATE_SUCCESS'\n}\n\nexport class FileFromTemplate implements Action {\n  readonly type = TemplateActionTypes.FileFromTemplate;\n\n  constructor() {}\n}\n\nexport class FolderFromTemplate implements Action {\n  readonly type = TemplateActionTypes.FolderFromTemplate;\n\n  constructor() {}\n}\n\nexport class CreateFromTemplate implements Action {\n  readonly type = TemplateActionTypes.CreateFromTemplate;\n\n  constructor(public payload: Node) {}\n}\n\nexport class CreateFromTemplateSuccess implements Action {\n  readonly type = TemplateActionTypes.CreateFromTemplateSuccess;\n\n  constructor(public node: Node) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Action } from '@ngrx/store';\n\nexport enum ContextMenuActionTypes {\n  ContextMenu = 'CONTEXT_MENU'\n}\n\nexport class ContextMenu implements Action {\n  readonly type = ContextMenuActionTypes.ContextMenu;\n\n  constructor(public event: MouseEvent) {}\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  CloseModalDialogsAction,\n  AppActionTypes\n} from '../actions/app.actions';\n\n@Injectable()\nexport class DialogEffects {\n  constructor(private actions$: Actions, private matDialog: MatDialog) {}\n\n  @Effect({ dispatch: false })\n  closeAll$ = this.actions$.pipe(\n    ofType<CloseModalDialogsAction>(AppActionTypes.CloseModalDialogs),\n    map(() => this.matDialog.closeAll())\n  );\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { MinimalNodeEntryEntity, PathInfoEntity } from '@alfresco/js-api';\nimport { map } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { AppStore } from '../states/app.state';\nimport {\n  NavigateUrlAction,\n  RouterActionTypes,\n  NavigateRouteAction,\n  NavigateToFolder,\n  NavigateToParentFolder\n} from '../actions/router.actions';\nimport { SnackbarErrorAction } from '../actions/snackbar.actions';\n\n@Injectable()\nexport class RouterEffects {\n  constructor(\n    private store: Store<AppStore>,\n    private actions$: Actions,\n    private router: Router\n  ) {}\n\n  @Effect({ dispatch: false })\n  navigateUrl$ = this.actions$.pipe(\n    ofType<NavigateUrlAction>(RouterActionTypes.NavigateUrl),\n    map(action => {\n      if (action.payload) {\n        this.router.navigateByUrl(action.payload);\n      }\n    })\n  );\n\n  @Effect({ dispatch: false })\n  navigateRoute$ = this.actions$.pipe(\n    ofType<NavigateRouteAction>(RouterActionTypes.NavigateRoute),\n    map(action => {\n      this.router.navigate(action.payload);\n    })\n  );\n\n  @Effect({ dispatch: false })\n  navigateToFolder$ = this.actions$.pipe(\n    ofType<NavigateToFolder>(RouterActionTypes.NavigateFolder),\n    map(action => {\n      if (action.payload && action.payload.entry) {\n        this.navigateToFolder(action.payload.entry);\n      }\n    })\n  );\n\n  @Effect({ dispatch: false })\n  navigateToParentFolder$ = this.actions$.pipe(\n    ofType<NavigateToParentFolder>(RouterActionTypes.NavigateParentFolder),\n    map(action => {\n      if (action.payload && action.payload.entry) {\n        this.navigateToParentFolder(action.payload.entry);\n      }\n    })\n  );\n\n  private navigateToFolder(node: MinimalNodeEntryEntity) {\n    let link: any[] = null;\n    const { path, id } = node;\n\n    if (path && path.name && path.elements) {\n      const isLibraryPath = this.isLibraryContent(<PathInfoEntity>path);\n\n      const parent = path.elements[path.elements.length - 1];\n      const area = isLibraryPath ? '/libraries' : '/personal-files';\n\n      if (!isLibraryPath) {\n        link = [area, id];\n      } else {\n        // parent.id could be 'Site' folder or child as 'documentLibrary'\n        link = [area, parent.name === 'Sites' ? {} : id];\n      }\n\n      setTimeout(() => {\n        this.router.navigate(link);\n      }, 10);\n    } else {\n      this.router.navigate(['/personal-files', node.id]);\n    }\n  }\n\n  private navigateToParentFolder(node: MinimalNodeEntryEntity) {\n    let link: any[] = null;\n    const { path } = node;\n\n    if (path && path.name && path.elements) {\n      const isLibraryPath = this.isLibraryContent(<PathInfoEntity>path);\n\n      const parent = path.elements[path.elements.length - 1];\n      const area = isLibraryPath ? '/libraries' : '/personal-files';\n\n      if (!isLibraryPath) {\n        link = [area, parent.id];\n      } else {\n        // parent.id could be 'Site' folder or child as 'documentLibrary'\n        link = [area, parent.name === 'Sites' ? {} : parent.id];\n      }\n\n      setTimeout(() => {\n        this.router.navigate(link);\n      }, 10);\n    } else {\n      this.store.dispatch(\n        new SnackbarErrorAction('APP.MESSAGES.ERRORS.CANNOT_NAVIGATE_LOCATION')\n      );\n    }\n  }\n\n  private isLibraryContent(path: PathInfoEntity): boolean {\n    if (\n      path &&\n      path.elements.length >= 2 &&\n      path.elements[1].name === 'Sites'\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { TranslationService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { map } from 'rxjs/operators';\nimport { AppStore } from '../states/app.state';\nimport {\n  SnackbarInfoAction,\n  SnackbarActionTypes,\n  SnackbarWarningAction,\n  SnackbarErrorAction,\n  SnackbarAction\n} from '../actions/snackbar.actions';\n\n@Injectable()\nexport class SnackbarEffects {\n  constructor(\n    private store: Store<AppStore>,\n    private actions$: Actions,\n    private snackBar: MatSnackBar,\n    private translationService: TranslationService\n  ) {}\n\n  @Effect({ dispatch: false })\n  infoEffect = this.actions$.pipe(\n    ofType<SnackbarInfoAction>(SnackbarActionTypes.Info),\n    map((action: SnackbarInfoAction) => {\n      this.showSnackBar(action, 'info-snackbar');\n    })\n  );\n\n  @Effect({ dispatch: false })\n  warningEffect = this.actions$.pipe(\n    ofType<SnackbarWarningAction>(SnackbarActionTypes.Warning),\n    map((action: SnackbarWarningAction) => {\n      this.showSnackBar(action, 'warning-snackbar');\n    })\n  );\n\n  @Effect({ dispatch: false })\n  errorEffect = this.actions$.pipe(\n    ofType<SnackbarErrorAction>(SnackbarActionTypes.Error),\n    map((action: SnackbarErrorAction) => {\n      this.showSnackBar(action, 'error-snackbar');\n    })\n  );\n\n  private showSnackBar(action: SnackbarAction, panelClass: string) {\n    const message = this.translate(action.payload, action.params);\n\n    let actionName: string = null;\n    if (action.userAction) {\n      actionName = this.translate(action.userAction.title);\n    }\n\n    const snackBarRef = this.snackBar.open(message, actionName, {\n      duration: action.duration || 4000,\n      panelClass: panelClass\n    });\n\n    if (action.userAction) {\n      snackBarRef.onAction().subscribe(() => {\n        this.store.dispatch(action.userAction.action);\n      });\n    }\n  }\n\n  private translate(message: string, params?: Object): string {\n    return this.translationService.instant(message, params);\n  }\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport enum SearchOptionIds {\n  Files = 'content',\n  Folders = 'folder',\n  Libraries = 'libraries'\n}\n\nexport interface SearchOptionModel {\n  id: SearchOptionIds;\n  key: string;\n  value: boolean;\n  shouldDisable(): boolean;\n}\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { AppStore } from '../states/app.state';\nimport { createSelector } from '@ngrx/store';\n\nexport const selectApp = (state: AppStore) => state.app;\n\nexport const getHeaderColor = createSelector(\n  selectApp,\n  state => state.headerColor\n);\n\nexport const getAppName = createSelector(\n  selectApp,\n  state => state.appName\n);\n\nexport const getLogoPath = createSelector(\n  selectApp,\n  state => state.logoPath\n);\n\nexport const getLanguagePickerState = createSelector(\n  selectApp,\n  state => state.languagePicker\n);\n\nexport const getUserProfile = createSelector(\n  selectApp,\n  state => state.user\n);\n\nexport const getCurrentFolder = createSelector(\n  selectApp,\n  state => state.navigation.currentFolder\n);\n\nexport const getAppSelection = createSelector(\n  selectApp,\n  state => state.selection\n);\n\nexport const getSharedUrl = createSelector(\n  selectApp,\n  state => state.sharedUrl\n);\n\nexport const getNavigationState = createSelector(\n  selectApp,\n  state => state.navigation\n);\n\nexport const isInfoDrawerOpened = createSelector(\n  selectApp,\n  state => state.infoDrawerOpened\n);\n\nexport const showFacetFilter = createSelector(\n  selectApp,\n  state => state.showFacetFilter\n);\n\nexport const getDocumentDisplayMode = createSelector(\n  selectApp,\n  state => state.documentDisplayMode\n);\n\nexport const getRepositoryStatus = createSelector(\n  selectApp,\n  state => state.repository\n);\n\nexport const isQuickShareEnabled = createSelector(\n  getRepositoryStatus,\n  info => info.status.isQuickShareEnabled\n);\n\nexport const isAdmin = createSelector(\n  selectApp,\n  state => state.user.isAdmin\n);\n\nexport const getSideNavState = createSelector(\n  getAppSelection,\n  getNavigationState,\n  (selection, navigation) => {\n    return {\n      selection,\n      navigation\n    };\n  }\n);\n\nexport const getRuleContext = createSelector(\n  getAppSelection,\n  getNavigationState,\n  getUserProfile,\n  getRepositoryStatus,\n  (selection, navigation, profile, repository) => {\n    return {\n      selection,\n      navigation,\n      profile,\n      repository\n    };\n  }\n);\n\nexport const infoDrawerMetadataAspect = createSelector(\n  selectApp,\n  state => state.infoDrawerMetadataAspect\n);\n\nexport const getProcessServicesState = createSelector(\n  selectApp,\n  state => state.processServices\n);\n","/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2020 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { SnackbarEffects } from './effects/snackbar.effects';\nimport { DialogEffects } from './effects/dialog.effects';\nimport { RouterEffects } from './effects/router.effects';\n\n@NgModule({\n  imports: [\n    EffectsModule.forFeature([SnackbarEffects, DialogEffects, RouterEffects])\n  ]\n})\nexport class SharedStoreModule {}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}
