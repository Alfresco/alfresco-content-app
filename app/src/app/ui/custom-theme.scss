@import '~@angular/material/theming';
@import './overrides/adf-style-fixes.theme';
@import 'colors';

@include mat-core();


// Based on https://codepen.io/xdesro/pen/WJBwyv
@function tetrad($color) {
  $hue: hue($color);
  $saturation: saturation($color);
  $lightness: lightness($color);
  $tetrad: [hsl($hue, $saturation, $lightness),hsl($hue + 90 % 360, $saturation, $lightness),hsl($hue + 180 % 360, $saturation, $lightness),hsl($hue + 270 % 360, $saturation, $lightness)];

  @return $hue;
}

@function multiply ($fore, $back) {
  $red: red($back) * red($fore) / 255;
  $green: green($back) * green($fore) / 255;
  $blue: blue($back) * blue($fore) / 255;
  @return rgb($red, $green, $blue);
}

@function makeColorPalette($color) {
  $light: #fff;
  $dark: multiply($color, $color);
  $tetrad: tetrad($color);

  $palette: (
    50: mix($light, $color, 88%),
    100: mix($light, $color, 70%),
    200: mix($light, $color, 50%),
    300: mix($light, $color, 30%),
    400: mix($light, $color, 15%),
    500: mix($light, $color, 0%),
    600: mix($dark, $color, 13%),
    700: mix($dark, $color, 30%),
    800: mix($dark, $color, 46%),
    900: mix($dark, $color, 75%),
    A100: lighten(saturate(mix($dark, $color, 15%), 80%), 45.6%),
    A200: lighten(saturate(mix($dark, $color, 15%), 80%), 35.6%),
    A400: lighten(saturate(mix($dark, $color, 15%), 100%), 25.6%),
    A700: lighten(saturate(mix($dark, $color, 15%), 100%), 20.5%),
    contrast: (
      50: $dark-primary-text, // text colors need to be calculated
      100: $dark-primary-text,
      200: $dark-primary-text,
      300: $dark-primary-text,
      400: $dark-primary-text,
      500: $light-primary-text,
      600: $light-primary-text,
      700: $light-primary-text,
      800: $light-primary-text,
      900: $light-primary-text,
      A100: $dark-primary-text,
      A200: $light-primary-text,
      A400: $light-primary-text,
      A700: $light-primary-text,
    )
  );

  @return $palette;
}

$custom-primary-color: #13602d; // Custom colors from modeling app
$custom-accent-color: #3a0e0e;

$custom-primary-color-palette: makeColorPalette($custom-primary-color);
$custom-accent-color-palette: makeColorPalette($custom-accent-color);

$custom-theme-primary: mat-palette($custom-primary-color-palette, A100);
$custom-theme-accent: mat-palette($custom-accent-color-palette, A700);
// $custom-theme-primary: mat-palette($aca-primary-blue, A100);
// $custom-theme-accent: mat-palette($aca-accent-green, A200);

$custom-theme-warn: mat-palette($aca-warn, A100);
$custom-theme: mat-light-theme($custom-theme-primary, $custom-theme-accent, $custom-theme-warn);
$foreground: map-get($custom-theme, foreground);
$background: map-get($custom-theme, background);
$warn: map-get($custom-theme, warn);
$accent: map-get($custom-theme, accent);
$primary: map-get($custom-theme, primary);

@mixin custom-theme($theme) {
  @include angular-material-theme($theme);
  @include adf-core-theme($theme);
  @include adf-style-fixes($theme);

  .mat-toolbar {
    color: var(--theme-text-color, rgba(0, 0, 0, 0.54));
  }
}

//Custom variables - ACA specific styling:
$document-list-selection-color: mat-color($alfresco-ecm-blue, 500);
$document-list-background: white;
$data-table-dividers-wrapper-border: none;
$data-table-thumbnail-width: 35px;
$data-table-cell-min-width: 150px;
$data-table-cell-min-width--no-grow: 120px;
$data-table-cell-min-width--fileSize: 110px !important;
$data-table-cell-text-color: mat-color($foreground, text, 0.54);
$data-table-cell-link-color: mat-color($foreground, text);
$data-table-hover-color: #e3fafd;
$data-table-selection-color: #e3fafd;

$adf-pagination--border: 1px solid mat-color($foreground, text, 0.07);
$adf-pagination__empty--height: 0;

$adf-toolbar-single-row-height: 48px;
$adf-toolbar-padding: 14px;

$adf-upload-dragging-color: unset;
$adf-upload-dragging-border: 1px solid #00bcd4;
$adf-upload-dragging-background: #e0f7fa;
$adf-upload-dragging-level1-color: unset;
$adf-upload-dragging-level1-border: none;

$adf-permission-list-width: 100%;

$defaults: (
  --theme-primary-color: mat-color($primary),
  --theme-primary-color-default-contrast: mat-color($primary, default-contrast),
  --theme-warn-color: mat-color($warn),
  --theme-accent-color: mat-color($accent),
  --theme-background-color: mat-color($background, background),
  --theme-text-color: mat-color($foreground, text, 0.54),
  --theme-text-bold-color: mat-color($foreground, text, 0.87),
  --theme-title-color: mat-color($foreground, text, 0.87),
  --theme-text-disabled-color: mat-color($foreground, text, 0.38),
  --theme-border-color: mat-color($foreground, text, 0.07),
  --header-background-image: url('/assets/images/mastHead-bg-shapesPattern.svg'),
  --theme-card-background-color: mat-color($background, card),
  --theme-foreground-text-color: mat-color($foreground, text, 0.72),
  --theme-foreground-text-bold-color: mat-color($foreground, text, 0.87),
  --theme-secondary-text-color: mat-color($foreground, secondary-text),
  --theme-divider-color: mat-color($foreground, divider, 0.07),
  --theme-dialog-background-color: mat-color($background, dialog)
);

// propagates SCSS variables into the CSS variables scope
:root {
  @each $name, $value in $defaults {
    #{$name}: #{$value};
  }
}
