dist: trusty
sudo: required
services:
  - docker
addons:
  chrome: stable
language: node_js
node_js:
  - '8'

before_script:
  - sudo /etc/init.d/postgresql stop

before_cache:
  # Save tagged docker images
  - >
    mkdir -p $HOME/docker && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
    | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'

before_install:
  # Load cached docker images
  - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
  - npm install -g npm@latest
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start
  - sleep 3

cache:
  directories:
    - $HOME/docker

jobs:
  include:
    - stage: test
      name: 'Code quality checks'
      script:
        - npm run lint
        - npm run spellcheck
        - npm run format:check
    - stage: test
      name: 'Unit tests'
      script:
        - npm run test:ci
        - bash <(curl -s https://codecov.io/bash) -X gcov
    - stage: jest
      script:
        - npm run build && npm run e2e.jest.docker
    - stage: e2e
      name: 'Nginx'
      script: npm run build.e2e && npm run e2e:docker
    - stage: e2e
      name: 'Tomcat'
      script: npm run build.tomcat.e2e && npm run docker.tomcat.e2e
