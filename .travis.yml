dist: trusty
sudo: required
services:
  - docker
addons:
  chrome: stable
language: node_js
node_js:
  - '10'

cache:
  directories:
    - node_modules
    - $HOME/distnginx
    - $HOME/disttomcat

env:
  matrix:
    - DEPLOYMENT=Nginx SUITES=authentication
    - DEPLOYMENT=Nginx SUITES=listViews
    - DEPLOYMENT=Nginx SUITES=application
    - DEPLOYMENT=Nginx SUITES=navigation
    - DEPLOYMENT=Nginx SUITES=pagination
    - DEPLOYMENT=Nginx SUITES=search
    # - DEPLOYMENT=Nginx SUITES=actions
    - DEPLOYMENT=Nginx SUITES=viewer
    - DEPLOYMENT=Nginx SUITES=infoDrawer
    - DEPLOYMENT=Nginx SUITES=extensions

before_script:
  - sudo /etc/init.d/postgresql stop

before_install:
  - npm install -g npm@latest
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start
  - sleep 3

# after_success: |
#   # Set test suites
#   SUITE="--suite $SUITES"
#   if [ "$DEPLOYMENT" == "Nginx" ]; then
#     cp -a $HOME/dist dist;
#     ls $HOME/distnginx;
#     ls dist;
#     npm run e2e:docker;
#   else
#     cp -a $HOME/disttomcat dist;
#     ls $HOME/disttomcat;
#     ls dist;
#     npm run docker.tomcat.e2e;
#   fi

stages:
  - name: Quality and Unit tests

jobs:
  include:
    - stage: Quality and Unit tests
      name: Code quality checks
      after_success: false
      install:
        - npm run lint
    - name: Unit tests
      after_success: false
      install:
        - npm run test:ci
        - bash <(curl -s https://codecov.io/bash) -X gcov
    - name: Prepare nginx dist cache
      after_success: false
      install:
        - npm run build.e2e
        - cp -a dist $HOME/distnginx
    - name: Prepare tomcat dist cache
      after_success: false
      install:
        - npm run build.tomcat.e2e
        - cp -a dist $HOME/disttomcat
